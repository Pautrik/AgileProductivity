{"version":3,"sources":["helpers/constants.js","components/tasks/index.js","components/day/index.js","components/button/index.js","components/arrow/index.js","components/numberSelector2/index.js","helpers/requests.js","components/week/index.js","components/projectTasks/index.js","helpers/date.js","components/timelineTasks/index.js","components/addTimelineTaskModal/index.js","components/Timeline/index.js","App.js","serviceWorker.js","index.js"],"names":["ItemTypes","Task","props","state","isHoverTarget","this","status","taskText","deleteTask","isDragging","connectDragSource","connectDropTarget","hovered","taskColor","isEditing","style","display","className","backgroundColor","onClick","changeTaskState","visibility","React","Component","sourceType","targetTypes","taskTarget","drop","monitor","component","didDrop","destinationPos","position","getItemType","getItem","timestamp","source","item","type","destination","moveTask","DragSource","beginDrag","connect","dragSource","DropTarget","highlighted","canDrop","isOver","dropTarget","Day","taskTextRef","createRef","onTaskSubmit","bind","enterEditMode","setState","current","focus","text","innerText","addTask","dayName","isToday","color","dayDate","tasks","map","x","key","id","marginTop","contentEditable","ref","placeholder","onKeyDown","event","keyCode","dayTarget","length","shallow","Button","handleClick","children","Arrow","direction","NumberSelector2","value","handleClickUp","handleClickDown","httpRequestJson","url","a","options","fetch","cache","res","ok","Error","json","postTaskEndpoint","date","weekDays","yearMonths","Week","SetCurrentWeekState","newWeek","getCurrentWeekNum","fetchWeekToState","getCurrentYear","chosenYear","chosenWeek","clickUp","longYear","clickDown","dateToDayConverter","iDate","substr","parseInt","days","notes","addNote","deleteNote","fetchNotesToState","year","week","weekEndpoint","then","data","forEach","day","sort","b","catch","err","alert","message","console","error","yr2","Date","yr","getFullYear","tdt","Math","round","getTime","getDay","today","getDate","log","month","getMonth","concat","d","weekDate","slice","yearIn","yearSubOne","weekVariable","floor","weekVariable2","dayIndex","undefined","pos","newTask","requestOptions","method","headers","body","JSON","stringify","daysCopy","push","insertAndShiftTask","newDaysCopy","deleteTaskEndpoint","taskIndex","findIndex","splice","correctPositions","moveDayTask","moveNote","moveDayTaskToNote","moveNoteToDayTask","sourceIndex","destinationIndex","sourceTask","find","task","filter","patchBody","newDayTasks","_","i","min","patchDestinationIndex","sourcePatchBody","destinationPatchBody","sourcePosition","destinationPosition","notesCopy","sourceNote","notesDestinationIndex","dayPosition","notePosition","arr","newPos","firstPart","secondPart","newNote","newNotesCopy","deleteNotesEndpoint","noteIndex","substring","getCurrentYearMonthNumber","getCurrentDayNumber","taskId","newState","DndProvider","backend","Backend","paddingLeft","timeBlockDisplay","paddingRight","todaysDay","getCurrentWeekDay","isTodaysDate","onChangeTaskState","ProjectTask","projectName","active","onDelete","onToggleActive","stringToDate","str","dateToString","toISOString","replace","copyDate","isEqualDates","firstDate","secondDate","TimelineTasks","heightSplit","max","t","renderTask","stylePrep","height","taskWidth","endDate","abs","width","AddTimelineTaskModal","registerLocale","sv","startDate","setDate","selectedProject","projects","name","submitTask","e","target","currentTarget","onClose","onChange","selected","locale","dateFormat","result","project","p","onSubmit","getTimelineTaskEndpoint","join","months","Timeline","setStatePromise","Promise","resolve","rangeT","projectFilter","isLoading","viewingRange","inAddMode","isEditingProject","scrollerRef","projectTextRef","dateOffsetFromStart","getWeekDay","handleScroll","enterProjectEditMode","onProjectSumbit","deleteProject","editProjectActive","fetchProjectsAndTasks","tasksToDays","fetchTasks","fetchProjects","startedTasks","dayTasks","orderedDayTasks","startedProjectTasks","combinedTasks","offset","scrollWidth","newDate","fetchTransformTasksToState","scrollLeft","todayDate","viewportWidth","offsetWidth","goBack","goForward","border","fetchTransformDataToState","renderAddProject","onScroll","isFocusedDate","trim","deleteProjectEndpoint","isActive","projectsCopy","projectIndex","focusedDayComponent","querySelector","offsetLeft","deleteTimelineTaskEndpoint","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mSACaA,EACH,OADGA,EAEH,OCEJC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,eAAe,GAHA,E,qDAOT,IAAD,EACkCC,KAAKH,MAAtCI,EADD,EACCA,OAAQC,EADT,EACSA,SAAUC,EADnB,EACmBA,WADnB,EAQHH,KAAKH,MALPO,EAHK,EAGLA,WACAC,EAJK,EAILA,kBACAC,EALK,EAKLA,kBACAC,EANK,EAMLA,QAIEC,GAVG,EAOLC,UAGc,IAahB,OAXe,IAAXR,GACFO,EAAY,GACM,IACE,IAAXP,GACTO,EAAY,UACM,IACE,IAAXP,IACTO,EAAY,UACM,IAGbF,EACLD,EACE,yBAAKK,MAAON,EAAa,CAAEO,QAAS,QAAW,IAC5CJ,GAAW,yBAAKK,UAAU,YAC3B,yBAAKA,UAAU,OAAOF,MAAO,CAAEG,gBAAiBL,IAE5C,4BAAQM,QAASX,EAAYS,UAAU,YAAvC,UAIDV,EACAD,EACC,4BACEa,QAASd,KAAKH,MAAMkB,gBACpBH,UAAU,eAFZ,UAOE,4BACEF,MAAO,CAAEM,WAAY,WADvB,kB,GAlDGC,IAAMC,WA+DnBC,EAAa,SAACtB,GAAD,OAAYA,EAAMI,OAASN,EAAiBA,GAgBzDyB,EAAc,CAACzB,EAAgBA,GAE/B0B,EAAa,CACjBC,KAAM,SAACzB,EAAO0B,EAASC,GACrB,IAAID,EAAQE,UAAZ,CAEA,IAAIC,EAAiB7B,EAAM8B,SAEzBR,EAAWtB,KAAW0B,EAAQK,eAC9B/B,EAAM8B,SAAWJ,EAAQM,UAAUF,WAGhCR,EAAWtB,KAAWF,GACrB4B,EAAQM,UAAUC,YAAcjC,EAAMiC,WACxCX,EAAWtB,KAAWF,IAEtB+B,IAIJ,IAAMK,EAAS,CAAEC,KAAMT,EAAQM,UAAWI,KAAMV,EAAQK,eAClDM,EAAc,CAClBF,KAAM,CAAEF,UAAWjC,EAAMiC,UAAWH,SAAUD,GAC9CO,KAAMd,EAAWtB,IAGnBA,EAAMsC,SAASJ,EAAQG,MAUZE,cACbjB,EAjDiB,CACjBkB,UAAW,SAACxC,GAEV,MADa,CAAEiC,UAAWjC,EAAMiC,UAAWH,SAAU9B,EAAM8B,aAKzC,SAACW,EAASf,GAAV,MAAuB,CAC3ClB,kBAAmBiC,EAAQC,aAC3BnC,WAAYmB,EAAQnB,gBAuCPgC,CAIbI,YAAWpB,EAAaC,GAVJ,SAACiB,EAASf,GAAV,MAAuB,CAC3CkB,YAAalB,EAAQmB,UACrBnC,QAASgB,EAAQoB,SACjBrC,kBAAmBgC,EAAQM,gBAO3BJ,CAAmD5C,ICrH/CiD,E,kDACJ,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXW,WAAW,GAEb,EAAKqC,YAAc7B,IAAM8B,YACzB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAPJ,E,4DAUF,IAAD,OACdjD,KAAKmD,SAAS,CAAE1C,WAAW,IAAQ,kBAAM,EAAKqC,YAAYM,QAAQC,a,qCAIlE,IAAMC,EAAOtD,KAAK8C,YAAYM,QAAQG,UACtCvD,KAAKH,MAAM2D,QAAQF,GACnBtD,KAAKmD,SAAS,CAAE1C,WAAW,M,+BAGnB,IAAD,OACP,OAAOT,KAAKH,MAAMS,kBAChB,yBAAKM,UAAU,WACb,4BACGZ,KAAKH,MAAM4D,QACXzD,KAAKH,MAAM6D,QACV,uBAAGhD,MAAO,CAAEiD,MAAO,QAAU3D,KAAKH,MAAM+D,SAEtC,2BAAI5D,KAAKH,MAAM+D,UAGpB5D,KAAKH,MAAMgE,MAAMC,KAAI,SAACC,GAAD,OACpB,kBAAC,EAAD,CACEC,IAAG,UAAKD,EAAEE,IACV9D,WAAY,kBAAM,EAAKN,MAAMM,WAAW4D,EAAEE,KAC1C9B,SAAU,SAACJ,EAAQG,GAAT,OAAyB,EAAKrC,MAAMsC,SAASJ,EAAQG,IAC/D+B,GAAIF,EAAEE,GACN/D,SAAU6D,EAAET,KACZrD,OAAQ8D,EAAEjE,MACVgC,UAAW,EAAKjC,MAAMiC,UACtBH,SAAUoC,EAAEpC,SACZZ,gBAAiB,kBAAM,EAAKlB,MAAMkB,gBAAgBgD,EAAEE,UAGvDjE,KAAKF,MAAMW,UACV,oCACE,yBAAKG,UAAU,YAAYF,MAAOV,KAAKH,MAAMU,QAAU,CAAE2D,UAAW,QAAW,IAC7E,yBACEtD,UAAU,YACVuD,iBAAe,EACfC,IAAKpE,KAAK8C,YACVuB,YAAY,kBACZC,UAAW,SAACC,GACY,KAAlBA,EAAMC,QACR,EAAKxB,eACoB,KAAlBuB,EAAMC,SAAgB,EAAKrB,SAAS,CAAE1C,WAAW,OAK9D,yBAAKG,UAAU,qBACb,4BAAQA,UAAU,gBAAgBE,QAASd,KAAKgD,cAAhD,YAIJ,yBAAKlC,QAAS,kBAAM,EAAKqC,SAAS,CAAE1C,WAAW,KAAUG,UAAU,gBAGnE,4BAAQE,QAASd,KAAKkD,cAAetC,UAAU,kBAAkBF,MAAOV,KAAKH,MAAMU,QAAU,CAAE2D,UAAW,QAAW,IAArH,W,GArEMjD,IAAMC,WA+ElBE,EAAc,CAACzB,EAAgBA,GAE/B8E,EAAY,CAChBnD,KAAM,SAACzB,EAAO0B,EAASC,GACrB,IAAID,EAAQE,UAAZ,CAEA,IAAMQ,EAAOpC,EAAMiC,UAAYnC,EAAiBA,EAE5C+B,EAAiB7B,EAAMgE,MAAMa,OAC7BzC,IAASV,EAAQK,gBACdK,IAAStC,GAAkB4B,EAAQM,UAAUC,YAAcjC,EAAMiC,WAAcG,IAAStC,IAC3F+B,IAIJ,IAAMK,EAAS,CAAEC,KAAMT,EAAQM,UAAWI,KAAMV,EAAQK,eAClDM,EAAc,CAAEF,KAAM,CAAEF,UAAWjC,EAAMiC,UAAWH,SAAUD,GAAkBO,QAEtFpC,EAAMsC,SAASJ,EAAQG,MASZM,cAAWpB,EAAaqD,GALjB,SAACnC,EAASf,GAAV,MAAuB,CAC3ChB,QAASgB,EAAQoB,OAAO,CAAEgC,SAAS,IACnCrE,kBAAmBgC,EAAQM,gBAGdJ,CAAkDK,GChGlD+B,G,8DAbb,WAAY/E,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKjB,OACE,4BAAQgB,QAASd,KAAKH,MAAMgF,YAAajE,UAAU,WAChDZ,KAAKH,MAAMiF,c,GARC7D,IAAMC,YCUZ6D,G,wDATb,WAAYlF,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKjB,OAAO,uBAAGc,UAAW,CAAC,eAAD,OAAgBZ,KAAKH,MAAMmF,kB,GANhC/D,IAAMC,YCwBX+D,G,wDAtBb,WAAYpF,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKjB,OACE,yBAAKc,UAAU,mBACb,sCACA,yBAAKA,UAAW,qBAAsBZ,KAAKH,MAAMqF,OACjD,yBAAKtE,UAAU,aACb,4BAAQE,QAASd,KAAKH,MAAMsF,cAAevE,UAAU,WACnD,kBAAC,EAAD,CAAOoE,UAAU,QAEnB,4BAAQlE,QAASd,KAAKH,MAAMuF,gBAAiBxE,UAAU,WACrD,kBAAC,EAAD,CAAOoE,UAAU,gB,GAfC/D,IAAMC,Y,yBCJ9BmE,EAAe,uCAAG,WAAOC,GAAP,6BAAAC,EAAA,6DAAYC,EAAZ,+BAAoB,GAApB,SACFC,MAAMH,EAAD,aAAQI,MAAO,YAAeF,IADjC,WACdG,EADc,QAGZC,GAHY,sBAIV,IAAIC,MAAM,2BAJA,uBAOPF,EAAIG,OAPG,mFAAH,sD,iBCcfC,EAAmB,SAACC,GAAD,2BAAwBA,IAQ3CC,EAAW,CACf,SACA,UACA,YACA,WACA,SACA,WACA,UAGIC,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAwiBaC,E,kDApiBb,WAAYtG,GAAQ,IAAD,8BACjB,cAAMA,IAwGRuG,oBAAsB,WACpB,IAAMC,EAAU,EAAKC,oBACrB,EAAKC,iBAAiB,EAAKC,iBAAkBH,GAC7C,EAAKlD,SAAS,CACZsD,WAAY,EAAKD,iBAAkBE,WAAYL,KA7GhC,EAmInBM,QAAU,WACR,IAAIN,EAAU,EAAKvG,MAAM4G,WAAa,EAEtB,KAAZL,IAA4D,IAAzC,EAAKO,SAAS,EAAK9G,MAAM2G,aAC9CJ,EAAU,EACV,EAAKE,iBAAiB,EAAKzG,MAAM2G,WAAa,EAAGJ,GACjD,EAAKlD,SAAS,CACZsD,WAAY,EAAK3G,MAAM2G,WAAa,EAAGC,WAAYL,KAGlC,KAAZA,GAAmB,EAAKO,SAAS,EAAK9G,MAAM2G,aACnD,EAAKF,iBAAiB,EAAKzG,MAAM2G,WAAYJ,GAC7C,EAAKlD,SAAS,CACZuD,WAAYL,KAGK,KAAZA,GACPA,EAAU,EACV,EAAKE,iBAAiB,EAAKzG,MAAM2G,WAAa,EAAGJ,GACjD,EAAKlD,SAAS,CACZsD,WAAY,EAAK3G,MAAM2G,WAAa,EAAGC,WAAYL,MAIrD,EAAKE,iBAAiB,EAAKzG,MAAM2G,WAAYJ,GAC7C,EAAKlD,SAAS,CACZsD,WAAY,EAAK3G,MAAM2G,WAAYC,WAAYL,MA7JlC,EAkKnBQ,UAAY,WACV,IAAIR,EAAU,EAAKvG,MAAM4G,WAAa,EACtB,IAAZL,GAAiB,EAAKO,SAAS,EAAK9G,MAAM2G,WAAa,IACzDJ,EAAU,GACV,EAAKE,iBAAiB,EAAKzG,MAAM2G,WAAa,EAAGJ,GACjD,EAAKlD,SAAS,CACZsD,WAAY,EAAK3G,MAAM2G,WAAa,EAAGC,WAAYL,KAGlC,IAAZA,GAAkB,EAAKO,SAAS,EAAK9G,MAAM2G,WAAa,IAQ/D,EAAKF,iBAAiB,EAAKzG,MAAM2G,WAAYJ,GAC7C,EAAKlD,SAAS,CACZsD,WAAY,EAAK3G,MAAM2G,WAAYC,WAAYL,MATjDA,EAAU,GACV,EAAKE,iBAAiB,EAAKzG,MAAM2G,WAAa,EAAGJ,GACjD,EAAKlD,SAAS,CACZsD,WAAY,EAAK3G,MAAM2G,WAAa,EAAGC,WAAYL,MA/KtC,EAqbnBS,mBAAqB,SAACC,GACpB,IAAIf,EAAwB,kBAAVe,EAAqBA,EAAMC,OAAO,EAAG,GAAK,KAC5D,OAAOC,SAASjB,IArbhB,EAAKlG,MAAQ,CACXoH,KAAM,CACJ,CAAElB,KAAM,WAAYnC,MAAO,IAC3B,CAAEmC,KAAM,WAAYnC,MAAO,IAC3B,CAAEmC,KAAM,WAAYnC,MAAO,IAC3B,CAAEmC,KAAM,WAAYnC,MAAO,IAC3B,CAAEmC,KAAM,WAAYnC,MAAO,IAC3B,CAAEmC,KAAM,WAAYnC,MAAO,IAC3B,CAAEmC,KAAM,WAAYnC,MAAO,KAG7BsD,MAAO,GAEPT,WAAY,EAAKJ,oBACjBG,WAAY,EAAKD,kBAGnB,EAAKhD,QAAU,EAAKA,QAAQP,KAAb,gBACf,EAAK9C,WAAa,EAAKA,WAAW8C,KAAhB,gBAClB,EAAKmE,QAAU,EAAKA,QAAQnE,KAAb,gBACf,EAAKoE,WAAa,EAAKA,WAAWpE,KAAhB,gBAClB,EAAKd,SAAW,EAAKA,SAASc,KAAd,gBAvBC,E,gEA2BjBjD,KAAKuG,iBAAiBvG,KAAKF,MAAM2G,WAAYzG,KAAKF,MAAM4G,YACxD1G,KAAKsH,sB,uCAGUC,EAAMC,GAAO,IAAD,OAC3BnC,EAnEiB,SAACkC,EAAMC,GAAP,2BAA8BD,GAA9B,OAAqCC,GAmEtCC,CAAaF,EAAMC,IAChCE,MAAK,SAACC,GACLA,EAAKC,SAAQ,SAACC,GAAD,OACXA,EAAIhE,MAAMiE,MAAK,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAE5D,SAAWoG,EAAEpG,eAE1C,EAAKwB,SAAS,CAAE+D,KAAMS,OAEvBK,OAAM,SAACC,GACNC,MAAMD,EAAIE,SACVC,QAAQC,MAAMJ,Q,0CAIC,IAAD,OAClB5C,EA7EqB,oBA8ElBqC,MAAK,SAACC,GACLA,EAAKG,MAAK,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAE5D,SAAWoG,EAAEpG,YACnC,EAAKwB,SAAS,CAAEgE,MAAOQ,OAExBK,OAAM,SAACC,GACNC,MAAMD,EAAIE,SACVC,QAAQC,MAAMJ,Q,0CAKlB,IAAIK,EAAM,IAAIC,KACVC,GAAK,IAAID,MAAOE,cAChBC,EAAM,IAAIH,KAAJ,qBAAuBC,EAAvB,gBACV,OACE,EACAG,KAAKC,QACDN,EAAIO,UAAYH,EAAIG,WAAa,MACjC,GACEH,EAAII,SAAW,GAAK,GACxB,K,0CAMJ,IAAIjB,GAAM,IAAIU,MAAOO,SACrB,OAAY,IAARjB,EACK5B,EAAS,GAEXA,EAAS4B,EAAM,K,4CAItB,IAAIkB,GAAQ,IAAIR,MAAOS,UAEvB,OADAZ,QAAQa,IAAIF,GACLA,I,4CAIP,IAAIG,GAAQ,IAAIX,MAAOY,WACvB,OAAOjD,EAAWgD,K,kDAIlB,IAAIA,GAAQ,IAAIX,MAAOY,WAAa,EACpC,GAAID,EAAQ,GAAI,CAEdA,EADW,IACEE,OAAOF,GAEtB,OAAOA,I,uCAIP,OAAO,IAAIX,MAAOE,gB,yCAalB,IAAIY,GAAI,IAAId,MAAOO,SACfQ,EAAWtJ,KAAKF,MAAMoH,KAAKmC,GAAGrD,KAC9BkD,EAAQjC,SAASqC,EAASC,MAAM,EAAG,IACnChC,EAAO+B,EAASC,MAAM,EAAG,GAC7B,OAAOrD,EAAWgD,EAAQ,GAAK,IAAM3B,I,+BAG9BiC,GACP,IAAIjC,EAAOiC,EACPC,EAAalC,EAAO,EACpBmC,GAAiBnC,EAAOoB,KAAKgB,MAAOpC,EAAO,GAAMoB,KAAKgB,MAAOpC,EAAO,KAAQoB,KAAKgB,MAAOpC,EAAO,MAAS,EACxGqC,GAAkBH,EAAad,KAAKgB,MAAOF,EAAa,GAAMd,KAAKgB,MAAOF,EAAa,KAAQd,KAAKgB,MAAOF,EAAa,MAAS,EACrI,OAAqB,IAAjBC,GAAwC,IAAlBE,I,8BA4DpBtG,EAAM0C,EAAM6D,GAAiC,IAAD,OAAtBlI,EAAsB,4DAAXmI,EACjCC,EAAMpI,GAAY3B,KAAKF,MAAMoH,KAAK2C,GAAUhG,MAAMa,OAClDsF,EAAU,CACd1G,OACA0C,OACAlG,MAAO,EACP6B,SAAUoI,GAGNE,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAIjBO,EAAQ,YAAOvK,KAAKF,MAAMoH,MAChCqD,EAASV,GAAT,eAA0BU,EAASV,IACnCU,EAASV,GAAUhG,MAAnB,YAA+B0G,EAASV,GAAUhG,YACjCiG,IAAbnI,EACF4I,EAASV,GAAUhG,MAAM2G,KAAKR,GAG9BO,EAASV,GAAUhG,MAAQ7D,KAAKyK,mBAAmBF,EAASV,GAAUhG,MAAOmG,EAASD,GAExF/J,KAAKmD,SAAS,CAAE+D,KAAMqD,IAEtBlF,EAAgBU,EAAiBC,GAAOiE,GACrCvC,MAAK,SAACC,GACL,IAAM+C,EAAW,YAAOH,GACxBG,EAAYb,GAAZ,eAA6Ba,EAAYb,IACzCa,EAAYb,GAAUhG,MAAtB,YAAkC6G,EAAYb,GAAUhG,OACxD6G,EAAYb,GAAUhG,MAAMkG,GAA5B,eAAwCW,EAAYb,GAAUhG,MAAMkG,GAApE,CAA0E9F,GAAI0D,EAAK,KACnF,EAAKxE,SAAS,CAAE+D,KAAMwD,OAEvB1C,OAAM,kBAAME,MAAM,8B,iCAGZjE,EAAI4F,GACbxE,EAlQuB,SAACpB,GAAD,2BAAsBA,GAkQ7B0G,CAAmB1G,GAAK,CAAEiG,OAAQ,WAAYlC,OAAM,kBAClEE,MAAM,4BAGR,IAAMqC,EAAQ,YAAOvK,KAAKF,MAAMoH,MAChCqD,EAASV,GAAT,eAA0BU,EAASV,IACnCU,EAASV,GAAUhG,MAAnB,YAA+B0G,EAASV,GAAUhG,OAClD,IAAM+G,EAAYL,EAASV,GAAUhG,MAAMgH,WAAU,SAAC9G,GAAD,OAAOA,EAAEE,KAAOA,KACrEsG,EAASV,GAAUhG,MAAMiH,OAAOF,EAAW,GAE3C5K,KAAK+K,iBAAiBR,EAASV,GAAUhG,OAEzC7D,KAAKmD,SAAS,CAAE+D,KAAMqD,M,+BAIfxI,EAAQG,GACXH,EAAOE,OAAStC,GAAkBuC,EAAYD,OAAStC,EACzDK,KAAKgL,YACH,CAAEhF,KAAMjE,EAAOC,KAAKF,UAAWH,SAAUI,EAAOC,KAAKL,UACrD,CACEqE,KAAM9D,EAAYF,KAAKF,UACvBH,SAAUO,EAAYF,KAAKL,WAI/BI,EAAOE,OAAStC,GAChBuC,EAAYD,OAAStC,EAErBK,KAAKiL,SAASlJ,EAAOC,KAAKL,SAAUO,EAAYF,KAAKL,UAE9CI,EAAOE,OAAStC,GAAkBuC,EAAYD,OAAStC,EAC9DK,KAAKkL,kBAAkBnJ,EAAOC,KAAKF,UAAWC,EAAOC,KAAKL,SAAUO,EAAYF,KAAKL,UAE9EI,EAAOE,OAAStC,GAAkBuC,EAAYD,OAAStC,GAC9DK,KAAKmL,kBAAkBpJ,EAAOC,KAAKL,SAAUO,EAAYF,KAAKF,UAAWI,EAAYF,KAAKL,Y,kCAKlFI,EAAQG,GAClB,IAAMkJ,EAAcpL,KAAKF,MAAMoH,KAAK2D,WAClC,SAAChD,GAAD,OAAS9F,EAAOiE,OAAS6B,EAAI7B,QAEzBqF,EAAmBrL,KAAKF,MAAMoH,KAAK2D,WACvC,SAAChD,GAAD,OAAS3F,EAAY8D,OAAS6B,EAAI7B,QAI9BuE,EAAQ,YAAOvK,KAAKF,MAAMoH,MAChCqD,EAASa,GAAT,eAA6Bb,EAASa,IACtCb,EAASc,GAAT,eAAkCd,EAASc,IAC3Cd,EAASa,GAAavH,MAAtB,YAAkC0G,EAASa,GAAavH,OACxD0G,EAASc,GAAkBxH,MAA3B,YAAuC0G,EAASc,GAAkBxH,OAGlE,IAAMyH,EAAaf,EAASa,GAAavH,MAAM0H,MAC7C,SAACC,GAAD,OAAUA,EAAK7J,WAAaI,EAAOJ,YAGrC4I,EAASa,GAAavH,MAAQ0G,EAASa,GAAavH,MAAM4H,QACxD,SAACD,GAAD,OAAUA,EAAK7J,WAAaI,EAAOJ,YAGrC3B,KAAK+K,iBAAiBR,EAASa,GAAavH,OAG5CyH,EAAWtF,KAAOuE,EAASc,GAAkBrF,KAG7C,IAII0F,EAJEC,EAAc3L,KAAKyK,mBAAmBF,EAASc,GAAkBxH,MAAOyH,EAAYpJ,EAAYP,UAKtG,GAJA4I,EAASc,GAAkBxH,MAAQ8H,EACnC3L,KAAKmD,SAAS,CAAE+D,KAAMqD,IAGlBxI,EAAOiE,OAAS9D,EAAY8D,MAK9B,GAJA0F,EAAYnB,EAASa,GAAavH,MAAM4H,QAAO,SAACG,EAAGC,GAAJ,OAC7CA,GAAKlD,KAAKmD,IAAI/J,EAAOJ,SAAUO,EAAYP,aAGzCI,EAAOJ,SAAWO,EAAYP,SAAU,CAC1C,IAAMoK,EAAwBL,EAAUb,WAAU,SAAA9G,GAAC,OAAIA,EAAEE,KAAOqH,EAAWrH,MAC3EyH,EAAUK,GAAV,eAAwCL,EAAUK,GAAlD,CAA0EpK,SAAU+J,EAAUK,GAAuBpK,SAAW,SAG/H,CACH,IAAMqK,EAAkBzB,EAASa,GAAavH,MAAM4H,QAAO,SAACG,EAAGC,GAAJ,OAAUA,GAAK9J,EAAOJ,YAC3EsK,EAAuB1B,EAASc,GAAkBxH,MAAM4H,QAAO,SAACG,EAAGC,GAAJ,OAAUA,GAAK3J,EAAYP,YAChG+J,EAAS,sBAAOM,GAAP,YAA2BC,IAGtC,IAAMhC,EAAiB,CACrBC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUoB,IAGvBrG,EAlWsB,kBAkWa4E,GAChCjC,OAAM,kBAAME,MAAM,4B,+BAGdgE,EAAgBC,GAEvB,IAAIC,EAAS,YAAOpM,KAAKF,MAAMqH,OAFa,EAGvBiF,EAAUtB,OAAOoB,EAAgB,GAA/CG,EAHqC,oBAI5CrM,KAAK+K,iBAAiBqB,GAEtBA,EAAYpM,KAAKyK,mBACf2B,EACAC,EACAF,GAGFnM,KAAKmD,SAAS,CAAEgE,MAAOiF,IAEvB,IAAMV,EAAYU,EAAUX,QAAO,SAACG,EAAGC,GAAJ,OACjCA,GAAKlD,KAAKmD,IAAII,EAAgBC,MAEhC,GAAID,EAAiBC,EAAqB,CACxC,IAAMG,EAAwBZ,EAAUb,WAAU,SAAA9G,GAAC,OAAIA,EAAEE,KAAOoI,EAAWpI,MAC3EyH,EAAUY,GAAV,eAAwCZ,EAAUY,GAAlD,CAA0E3K,SAAU+J,EAAUY,GAAuB3K,SAAW,IAGlI,IAAMsI,EAAiB,CACrBC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUoB,IAGvBrG,EA9XuB,mBA8Xa4E,GACjCjC,OAAM,kBAAME,MAAM,4B,wCAGLtE,EAAS2I,EAAaC,GACtC,IAAMpB,EAAcpL,KAAKF,MAAMoH,KAAK2D,WAAU,SAAAhD,GAAG,OAAIjE,IAAYiE,EAAI7B,QADjB,EAG/BhG,KAAKF,MAAMoH,KAAKkE,GAAavH,MAAM0I,GAAhDtI,EAH4C,EAG5CA,GAAIX,EAHwC,EAGxCA,KAEZtD,KAAKG,WAAW8D,EAAImH,GACpBpL,KAAKoH,QAAQ9D,EAAMkJ,K,wCAGHA,EAAc5I,EAAS2I,GACvC,IAAMlB,EAAmBrL,KAAKF,MAAMoH,KAAK2D,WAAU,SAAAhD,GAAG,OAAIjE,IAAYiE,EAAI7B,QAElEA,EAAShG,KAAKF,MAAMoH,KAAKmE,GAAzBrF,KAH4C,EAI/BhG,KAAKF,MAAMqH,MAAMqF,GAA9BvI,EAJ4C,EAI5CA,GAAIX,EAJwC,EAIxCA,KAEZtD,KAAKqH,WAAWpD,GAChBjE,KAAKwD,QAAQF,EAAM0C,EAAMqF,EAAkBkB,K,uCAI5BE,GACfA,EAAI3E,MAAK,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAE5D,SAAWoG,EAAEpG,YAClC8K,EAAI7E,SAAQ,SAAC7D,EAAG8H,GAAJ,OAAW9H,EAAEpC,SAAWkK,O,yCAGnBhI,EAAOmG,EAAS0C,GACjC,IAAMC,EAAY9I,EAAM0F,MAAM,EAAGmD,GAC3BE,EAAa/I,EAChB0F,MAAMmD,EAAQ7I,EAAMa,QACpBZ,KAAI,SAACC,GAAD,sBAAaA,EAAb,CAAgBpC,SAAUoC,EAAEpC,SAAW,OAE9C,MAAM,GAAN,mBAAWgL,GAAX,gBAA2B3C,EAA3B,CAAoCrI,SAAU+K,KAA9C,YAA2DE,M,8BAGrDtJ,GAA6B,IAAD,OAAtB3B,EAAsB,4DAAXmI,EACjBC,EAAMpI,GAAY3B,KAAKF,MAAMqH,MAAMzC,OACnCmI,EAAU,CACdvJ,OACA3B,SAAUoI,GAGNE,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUuC,IAGnBT,EAAS,YAAOpM,KAAKF,MAAMqH,YACd2C,IAAbnI,EACFyK,EAAU5B,KAAKqC,GAGfT,EAAYpM,KAAKyK,mBAAmB2B,EAAWS,EAAS9C,GAE1D/J,KAAKmD,SAAS,CAAEgE,MAAOiF,IAEvB/G,EA5bsB,mBA4ba4E,GAChCvC,MAAK,SAACC,GACL,IAAMmF,EAAY,YAAOV,GACzBU,EAAa/C,GAAb,eAAyB+C,EAAa/C,GAAtC,CAA4C9F,GAAI0D,EAAK,KACrD,EAAKxE,SAAS,CAAEgE,MAAO2F,OAExB9E,OAAM,kBAAME,MAAM,8B,iCAGZjE,GACToB,EArcwB,SAACpB,GAAD,0BAAqBA,GAqc7B8I,CAAoB9I,GAAK,CAAEiG,OAAQ,WAAYlC,OAAM,kBACnEE,MAAM,4BAGR,IAAMkE,EAAS,YAAOpM,KAAKF,MAAMqH,OAC3B6F,EAAYZ,EAAUvB,WAAU,SAAC9G,GAAD,OAAOA,EAAEE,KAAOA,KACtDmI,EAAUtB,OAAOkC,EAAW,GAE5BhN,KAAK+K,iBAAiBqB,GAEtBpM,KAAKmD,SAAS,CAAEgE,MAAOiF,M,mCAQZpG,GACX,OAAIA,EAAKiH,UAAU,EAAG,KAAOjN,KAAKwG,kBAChCR,EAAKiH,UAAU,EAAG,KAAOjN,KAAKkN,6BAC7BlH,EAAKiH,UAAU,EAAG,KAAOjN,KAAKmN,wB,wCAMjBC,EAAQvB,GACxB,IAAMtB,EAAQ,YAAOvK,KAAKF,MAAMoH,MAChCqD,EAASsB,GAAT,eAAmBtB,EAASsB,IAC5BtB,EAASsB,GAAGhI,MAAZ,YAAwB0G,EAASsB,GAAGhI,OACpC,IAAM+G,EAAYL,EAASsB,GAAGhI,MAAMgH,WAAU,SAAC9G,GAAD,OAAOA,EAAEE,KAAOmJ,KAC9D7C,EAASsB,GAAGhI,MAAM+G,GAAlB,eAAoCL,EAASsB,GAAGhI,MAAM+G,IACtD,IAEIyC,EAFE7B,EAAOjB,EAASsB,GAAGhI,MAAM+G,GAI7ByC,EADiB,IAAf7B,EAAK1L,MACI,EAEA0L,EAAK1L,MAAQ,EAG1B0L,EAAK1L,MAAQuN,EAEb,IAAMpD,EAAiB,CACrBC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAACkB,KAExBnG,EAzfsB,kBAyfa4E,GAAgBjC,OAAM,kBACvDE,MAAM,qCAGRlI,KAAKmD,SAAS,CAAE+D,KAAMqD,M,+BAGd,IAAD,OACP,OACE,kBAAC+C,EAAA,EAAD,CAAaC,QAASC,KACpB,yBAAK5M,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eACb,yBAAKF,MAAO,CAAE+M,YAAa,QACzB,kBAAC,EAAD,CACEtI,cAAenF,KAAK2G,QACpBvB,gBAAiBpF,KAAK6G,UACtB3B,MAAOlF,KAAKF,MAAM4G,cAGtB,6BACE,wBAAIhG,MAAO,CAAEiD,MAAO,0BAA4B3D,KAAK0N,qBAEvD,yBAAKhN,MAAO,CAAEiN,aAAc,QAC1B,kBAAC,EAAD,CAAQ9I,YAAa7E,KAAKoG,qBAA1B,kBAKJ,yBAAKxF,UAAU,QACZqF,EAASnC,KAAI,SAACC,EAAG8H,GAAO,IAAD,EACE,EAAK/L,MAAMoH,KAAK2E,GAAhChI,EADc,EACdA,MAAOmC,EADO,EACPA,KACf,OACE,kBAAC,EAAD,CACE4H,UAAW,EAAKC,oBAChBjK,QAAS,EAAKkD,mBAAmB,EAAKhH,MAAMoH,KAAK2E,GAAG7F,MACpDtC,QAAS,EAAKoK,aAAa,EAAKhO,MAAMoH,KAAK2E,GAAG7F,MAC9CvC,QAASM,EACTF,MAAOA,EACPL,QAAS,SAACF,GAAD,OAAU,EAAKE,QAAQF,EAAM0C,EAAM6F,IAC5C1L,WAAY,SAAC8D,GAAD,OAAQ,EAAK9D,WAAW8D,EAAI4H,IACxC1J,SAAU,SAACJ,EAAQG,GAAT,OACR,EAAKC,SAASJ,EAAQG,IAExBJ,UAAWkE,EACXjF,gBAAiB,SAACqM,GAAD,OACf,EAAKW,kBAAkBX,EAAQvB,IAEjC7H,IAAKqG,KAAKC,UAAU,EAAKxK,MAAMoH,KAAK2E,SAI1C,4BAAQ/K,QAASd,KAAK6G,UAAWjG,UAAU,iBACzC,kBAAC,EAAD,CAAOoE,UAAU,UAEnB,4BAAQlE,QAASd,KAAK2G,QAAS/F,UAAU,aACvC,kBAAC,EAAD,CAAOoE,UAAU,aAIvB,yBAAKpE,UAAU,kBACb,kBAAC,EAAD,CACE6C,QAAQ,QACRI,MAAO7D,KAAKF,MAAMqH,MAClB3D,QAASxD,KAAKoH,QACdjH,WAAYH,KAAKqH,WACjBlF,SAAUnC,KAAKmC,kB,GA5hBVlB,IAAMC,WCvBV8M,G,mLApBH,IAAD,EACmDhO,KAAKH,MAAvDoO,EADD,EACCA,YAAaC,EADd,EACcA,OAAQC,EADtB,EACsBA,SAAUC,EADhC,EACgCA,eAEvC,OACE,yBAAKxN,UAAU,mBACb,yBAAKA,UAAU,eAAeF,MAAO,CAAEG,gBAAiBqN,EAAS,uBAAyB,kBACxF,4BAAQpN,QAAS,kBAAMqN,EAASF,IAAcrN,UAAU,YAAxD,KACCqN,EACD,4BAAQnN,QAASsN,EAAgBxN,UAAU,eACxCsN,EAAS,eAAiB,eAG/B,yBAAKtN,UAAU,sB,GAbGK,IAAMC,YCF1BmN,G,MAAe,SAACC,GAAD,OAAS,IAAI/F,KAAJ,UAAY+F,EAAItH,OAAO,EAAG,GAA1B,YAAgCsH,EAAItH,OAAO,EAAG,GAA9C,YAAoDsH,EAAItH,OAAO,EAAG,OAC1FuH,EAAe,SAACvI,GAAD,OAAUA,EAAKwI,cAAcxH,OAAO,EAAG,IAAIyH,QAAQ,KAAM,KACxEC,EAAW,SAAA1I,GAAI,OAAI,IAAIuC,KAAKvC,EAAK6C,YACjC8F,EAAe,SAACC,EAAWC,GAAZ,OAA2BN,EAAaK,KAAeL,EAAaM,ICmC1EC,E,uKAhCH,IAAD,OACCjL,EAAU7D,KAAKH,MAAfgE,MAEFkL,EAAcpG,KAAKqG,IAAL,MAAArG,KAAI,YAAQ9E,EAAM4H,QAAO,SAAAwD,GAAC,YAAUnF,IAANmF,QAAqCnF,IAAlBmF,EAAEF,eAA2BjL,KAAI,SAAAmL,GAAC,OAAIA,EAAEF,gBAArF,QAAmGlL,EAAMa,UAEjI,OACE,yBAAK9D,UAAU,kBACZiD,EAAMC,KAAI,SAAAmL,GAAC,OAAI,EAAKC,WAAWH,EAAaE,S,iCAKxCF,EAAavD,GAAO,IDnBZoD,EAAWC,ECmBA,OACtBM,EAAY,CAAEC,OAAO,eAAD,OAAiBL,EAAjB,MAE1B,QAAajF,IAAT0B,EAAoB,CACtB,IAAM6D,GDvBST,ECuBeP,EAAa7C,EAAKxF,MDvBtB6I,ECuB6BR,EAAa7C,EAAK8D,SDvBhC3G,KAAKC,MAAMD,KAAK4G,IAAIX,EAAYC,GAArB,QCwBpDM,EAAUK,MAAV,gBAA2BH,EAAY,EAAvC,gCAGAF,EAAUnO,WAAa,SAGzB,OACE,yBAAKJ,UAAU,gBAAgBF,MAAOyO,GACnC3D,GAAQ,2BAAIA,EAAKlI,MAClB,4BAAQ1C,UAAU,uBAAuBE,QAAS,kBAAM,EAAKjB,MAAMM,WAAWqL,EAAKvH,MAAnF,e,GA3BoBhD,IAAMC,W,kCCyFnBuO,G,yDArFX,WAAY5P,GAAQ,IAAD,sBACf,cAAMA,GAEN6P,yBAAe,KAAMC,KAErB,IAAMC,EAAY,IAAIrH,KAChB+G,EAAU,IAAI/G,KANL,OAOf+G,EAAQO,QAAQP,EAAQtG,UAAY,GAEpC,EAAKlJ,MAAQ,CACTgQ,gBAAiBjQ,EAAMkQ,SAAS,GAAGC,KACnCJ,YACAN,UACApP,SAAU,IAGd,EAAK+P,WAAa,EAAKA,WAAWhN,KAAhB,gBAhBH,E,qDAmBT,IAAD,OACL,OACI,yBAAKrC,UAAU,QAAQE,QAAS,SAAAoP,GACxBA,EAAEC,SAAWD,EAAEE,eACf,EAAKvQ,MAAMwQ,YAEf,yBAAKzP,UAAU,kBACX,wBAAIA,UAAU,eAAd,YACA,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACX,uBAAGA,UAAU,aAAb,WACA,uBAAGA,UAAU,aAAb,cACA,uBAAGA,UAAU,aAAb,YACA,uBAAGA,UAAU,aAAb,cAEJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,aACX,4BAAQsE,MAAOlF,KAAKF,MAAMgQ,gBAAiBlP,UAAU,mBAAmB0P,SAAU,SAAAJ,GAAC,OAAI,EAAK/M,SAAS,CAAE2M,gBAAiBI,EAAEC,OAAOjL,UAC5HlF,KAAKH,MAAMkQ,SAASjM,KAAI,SAAAC,GAAC,OAAI,4BAAQmB,MAAOnB,EAAEiM,MAAOjM,EAAEiM,WAGhE,yBAAKpP,UAAU,aACX,kBAAC,IAAD,CACI2P,SAAUvQ,KAAKF,MAAM8P,UACrBU,SAAU,SAAAtK,GAAI,OAAI,EAAK7C,SAAS,CAAEyM,UAAW5J,KAC7CwK,OAAO,KACPC,WAAW,gBAGnB,yBAAK7P,UAAU,aACX,kBAAC,IAAD,CACI2P,SAAUvQ,KAAKF,MAAMwP,QACrBgB,SAAU,SAAAtK,GAAI,OAAI,EAAK7C,SAAS,CAAEmM,QAAStJ,KAC3CwK,OAAO,KACPC,WAAW,gBAGnB,yBAAK7P,UAAU,aACX,2BACIqB,KAAK,OACLoC,YAAY,kBACZa,MAAOlF,KAAKF,MAAMI,SAClBoQ,SAAU,SAAAJ,GAAC,OAAI,EAAK/M,SAAS,CAAEjD,SAAUgQ,EAAEC,OAAOjL,cAIlE,4BAAQtE,UAAU,sBAAsBE,QAASd,KAAKiQ,YAAtD,c,mCAMF,IAAD,EACiDjQ,KAAKF,MAAvD8P,EADC,EACDA,UAAWN,EADV,EACUA,QAASQ,EADnB,EACmBA,gBAAiB5P,EADpC,EACoCA,SAEvCwQ,EAAS,CACX1K,KAAMuI,EAAaqB,GACnBN,QAASf,EAAae,GACtBqB,QAAS3Q,KAAKH,MAAMkQ,SAASxE,MAAK,SAAAqF,GAAC,OAAIA,EAAEZ,OAASF,KAClDxM,KAAMpD,GAGVF,KAAKH,MAAMgR,SAASH,O,GAlFOzP,IAAMC,YCInC4P,EAA0B,SAACf,EAAUH,EAAWN,GAAtB,qCAA0DS,EAASgB,KAAK,KAAxE,YAAgFnB,EAAhF,YAA6FN,IAMvHrJ,EAAW,CACb,MACA,MACA,MACA,MACA,MACA,MACA,OAGE+K,EAAS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAgXWC,G,kDA5WX,WAAYpR,GAAQ,IAAD,uBACf,cAAMA,IAuWVqR,gBAAkB,SAAApR,GAAK,OAAI,IAAIqR,SAAQ,SAAAC,GAAO,OAAI,EAAKjO,SAASrD,EAAOsR,OArWnE,IAAMxB,EAAY,IAAIrH,KAHP,OAKfqH,EAAUC,QAAQD,EAAU5G,UAAY,IAExC,EAAKlJ,MAAQ,CACT8P,YACAyB,OAAQ,GACRC,cAAe,MACfvB,SAAU,GACVlM,MAAO,GACPqD,KAAM,GACNqK,WAAW,EACXC,aAAc,QACdC,WAAW,EACXC,kBAAkB,GAGtB,EAAKC,YAAc1Q,IAAM8B,YACzB,EAAK6O,eAAiB3Q,IAAM8B,YAE5B,EAAK8O,oBAAsB,EAAKA,oBAAoB5O,KAAzB,gBAC3B,EAAK6O,WAAa,EAAKA,WAAW7O,KAAhB,gBAClB,EAAK8O,aAAe,EAAKA,aAAa9O,KAAlB,gBACpB,EAAKkG,SAAW,EAAKA,SAASlG,KAAd,gBAChB,EAAKgN,WAAa,EAAKA,WAAWhN,KAAhB,gBAClB,EAAK9C,WAAa,EAAKA,WAAW8C,KAAhB,gBAClB,EAAK+O,qBAAuB,EAAKA,qBAAqB/O,KAA1B,gBAC5B,EAAKgP,gBAAkB,EAAKA,gBAAgBhP,KAArB,gBACvB,EAAKiP,cAAgB,EAAKA,cAAcjP,KAAnB,gBACrB,EAAKkP,kBAAoB,EAAKA,kBAAkBlP,KAAvB,gBAhCV,E,8MAqCmBjD,KAAKoS,wB,uBAA/BvO,E,EAAAA,MAAOkM,E,EAAAA,SACT7I,EAAOlH,KAAKqS,YAAYxO,EAAOkM,G,SAE/B/P,KAAKkR,gBAAgB,CAAErN,QAAOkM,WAAU7I,S,oRAKtC6I,EAAa/P,KAAKF,MAAlBiQ,S,SACY/P,KAAKsS,WAAWvC,G,cAA9BlM,E,OACAqD,EAAOlH,KAAKqS,YAAYxO,EAAOkM,G,SAE/B/P,KAAKkR,gBAAgB,CAAErN,QAAOqD,S,OACpClH,KAAKmD,SAAS,CAAEoO,WAAW,I,sRAIJvR,KAAKuS,gB,cAAtBxC,E,gBACc/P,KAAKsS,WAAWvC,G,cAA9BlM,E,yBACC,CAAEkM,WAAUlM,U,4QAKPyN,EAAkBtR,KAAKF,MAAvBwR,c,SACKjM,EAlGa,2BAkGsBiM,I,wEAGhDpJ,MAAM,qC,yLAIG6H,G,+FAEqB/P,KAAKF,MAA3B8P,E,EAAAA,UAAWyB,E,EAAAA,QACb/B,EAAUZ,EAASkB,IACjBC,QAAQP,EAAQtG,UAAYqI,G,SACvBhM,EAAgByL,EAAwBf,EAASjM,KAAI,SAAAC,GAAC,OAAIA,EAAEiM,QAAOzB,EAAaqB,GAAYrB,EAAae,K,wEAGtHpH,MAAM,kC,kJAIFrE,EAAOkM,GAIf,IAJ0B,IAAD,OACnB7I,EAAO,GACTsL,EAAe,GAFM,WAIhB3G,GAJgB,MAKfjI,EAAU8K,EAAS,EAAK5O,MAAM8P,WACpChM,EAAQiM,QAAQjM,EAAQoF,UAAY6C,GAEpC,IAAM4G,EAAW5O,EAAM4H,QAAO,SAAAD,GAAI,OAAIA,EAAKxF,OAASuI,EAAa3K,MAE3D8O,EAAkB3C,EAASjM,KAAI,SAAA8M,GACjC,IAAM+B,EAAsBH,EAAa/G,QAAO,SAAAwD,GAAC,OAAIA,EAAE0B,QAAQX,OAASY,EAAEZ,QACpE4C,EAAa,sBACZD,EAAoB7O,KAAI,gBADZ,YAEZ2O,EAAShH,QAAO,SAAAwD,GAAC,OAAIA,EAAE0B,QAAQX,OAASY,EAAEZ,UAE3CjB,EAAc6D,EAAclO,OAGlC,OAFAiO,EAAoB/K,SAAQ,SAAAqH,GAAC,OAAIA,EAAEF,YAAcE,EAAEF,YAAcA,EAAcE,EAAEF,YAAcA,KAExF6D,MAGX,EAAAJ,GAAahI,KAAb,oBAAqBiI,IACrBD,EAAeA,EAAa/G,QAAO,SAAAD,GAAI,OAAIA,EAAK8D,UAAYf,EAAa3K,MAEzEsD,EAAKsD,KAAK,CACN3G,MAAO6O,EACP1M,KAAM0I,EAAS9K,MAvBdiI,EAAI,EAAGA,EAAI7L,KAAKF,MAAMuR,OAAQxF,IAAM,EAApCA,GA2BT,OAAO3E,I,0CAGS2L,GAChB,IAAM7M,EAAO0I,EAAS1O,KAAKF,MAAM8P,WAEjC,OADA5J,EAAK6J,QAAQ7J,EAAKgD,UAAY6J,GACvB7M,I,iCAGAA,GACP,OAAOC,EAASD,EAAK8C,Y,+BAGhB9C,GACL,OAAOgL,EAAOhL,EAAKmD,c,+BAGb,IAAD,OACC2J,EAAc9S,KAAK2R,YAAYvO,QAAQ0P,YACvCC,EAAUrE,EAAS1O,KAAKF,MAAM8P,WACpCmD,EAAQlD,QAAQkD,EAAQ/J,UAhKX,IAiKbhJ,KAAKmD,SAAS,CAAEyM,UAAWmD,EAAS1B,OAAQrR,KAAKF,MAAMuR,OAjK1C,KAiKmE,kBAC5E,EAAK2B,6BACAtL,MAAK,WACF,EAAKiK,YAAYvO,QAAQ6P,YAAc,EAAKtB,YAAYvO,QAAQ0P,YAAcA,U,kCAGjF,IAAD,OACR9S,KAAKmD,SAAS,CAAEkO,OAAQrR,KAAKF,MAAMuR,OAxKtB,KAwK+C,kBACxD,EAAK2B,kC,oCAGChN,GACV,IAAMkN,EAAY,IAAI3K,KAEtB,OADA2K,EAAUrD,QAAQqD,EAAUlK,UAAY,GACjC2F,EAAa3I,EAAMkN,K,qCAI1B,IAA6B,IAAzBlT,KAAKF,MAAMyR,UAAqB,CAChC,IAAM0B,EAAajT,KAAK2R,YAAYvO,QAAQ6P,WACtCH,EAAc9S,KAAK2R,YAAYvO,QAAQ0P,YACvCK,EAAgBnT,KAAK2R,YAAYvO,QAAQgQ,YAE3CH,EAAa,KACbjT,KAAKmD,SAAS,CAAEoO,WAAW,IAC3BvR,KAAKqT,UAEAP,EAAcG,EAAaE,EAAgB,MAChDnT,KAAKmD,SAAS,CAAEoO,WAAW,IAC3BvR,KAAKsT,gB,+BAKP,IAAD,OACL,OACI,oCACI,yBAAK1S,UAAU,YACX,yBAAKA,UAAU,mBACX,8BACA,wCACA,yBAAKA,UAAU,cACX,4BAAQsE,MAAOlF,KAAKF,MAAM0R,aAAc5Q,UAAU,eAAe0P,SAAU,SAAAJ,GAAC,OAAI,EAAK/M,SAAS,CAAEqO,aAActB,EAAEC,OAAOjL,UACnH,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,cAAd,YACA,4BAAQA,MAAM,gBAAd,aAEJ,4BAAQtE,UAAU,uBAAuBF,MAAO,CAAEG,gBAAiB,gBAAiB8C,MAAO,wBAAyB4P,OAAQ,QACxHzS,QAAS,kBAAM,EAAKqC,SAAS,CAAEsO,WAAW,MAD9C,iBAIR,yBAAK7Q,UAAU,mBACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,kBACX,4BACIA,UAAU,gBACVsE,MAAOlF,KAAKF,MAAMwR,cAClBhB,SAAU,SAAAJ,GACN,EAAK/M,SAAS,CAAEmO,cAAepB,EAAEC,OAAOjL,QAAS,kBAC7C,EAAKsO,iCAEb,4BAAQtO,MAAM,OAAd,gBACA,4BAAQA,MAAM,UAAd,eACA,4BAAQA,MAAM,YAAd,mBAGPlF,KAAKF,MAAMiQ,SAASjM,KAAI,SAACC,GAAD,OACrB,kBAAC,EAAD,CACIkK,YAAalK,EAAEiM,KACf9B,OAAQnK,EAAEmK,OACVC,SAAU,EAAK+D,cACf9D,eAAgB,kBAAM,EAAK+D,kBAAkBpO,EAAEiM,MAAOjM,EAAEmK,cAE/DlO,KAAKyT,oBAEV,yBAAKrP,IAAKpE,KAAK2R,YAAa/Q,UAAU,aAAa8S,SAAU1T,KAAK+R,cAC7D/R,KAAKF,MAAMoH,KAAKpD,KAAI,SAAA+D,GACjB,IAAMjE,EAAUiE,EAAI7B,KACd+C,EAAQ,IAAIR,KAClB,OACI,uCAAK3H,UAAS,uBAAkB,EAAKd,MAAM0R,eAAqB,EAAKmC,cAAc/P,GAAW,CAAEK,GAAI,OAAU,IAC1G,yBAAKrD,UAAU,aAAaF,MAAOiO,EAAa5F,EAAOnF,GAAW,CAAED,MAAO,OAAU,IAChF,EAAKmO,WAAWlO,GADrB,IAC+B,6BAC1B,EAAKuF,SAASvF,GAFnB,IAE6B,6BACxBA,EAAQoF,WAEZnB,EAAIhE,MAAMC,KAAI,SAACD,EAAOgI,GAAR,OACX,kBAAC,EAAD,CACIhI,MAAOA,EACP1D,WAAY,EAAKA,wBASpDH,KAAKF,MAAM2R,WACR,kBAAC,EAAD,CACI7Q,UAAU,kBACVmP,SAAU/P,KAAKF,MAAMiQ,SACrBc,SAAU,SAAAlJ,GACN,EAAKsI,WAAWtI,GAChB,EAAKxE,SAAS,CAAEsO,WAAW,KAE/BpB,QAAS,kBAAM,EAAKlN,SAAS,CAAEsO,WAAW,U,wCAM3C,IAAD,OACRxD,EAAcjO,KAAK4R,eAAexO,QAAQG,UAAUqQ,OAE1D,GAAoB,KAAhB3F,EAAJ,CAGA,IAAM7D,EAAO,CACT4F,KAAM/B,EACNC,QAAQ,GAGNjE,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUF,IAGzB/E,EA3SoB,sBA2SiB4E,GAChCvC,MAAK,kBAAM,EAAK8L,+BAChB9L,KAAK1H,KAAKkR,gBAAgB,CAAEQ,kBAAkB,KAC9C1J,OAAM,kBAAME,MAAM,kC,6CAGH,IAAD,OACnBlI,KAAKmD,SAAS,CAAEuO,kBAAkB,IAAQ,kBAAM,EAAKE,eAAexO,QAAQC,a,oCAGlE2M,GAAO,IAAD,OAChB3K,EArTsB,SAAA2K,GAAI,+BAAsBA,GAqThC6D,CAAsB7D,GAAO,CAAE9F,OAAQ,WAClDxC,MAAK,kBAAM,EAAK6K,mBAChB7K,MAAK,SAAAqI,GAAQ,OAAI,EAAKmB,gBAAgB,CAAEnB,gBACxC/H,OAAM,kBAAME,MAAM,iC,wCAGT8H,EAAM8D,GACpB,IAAM7J,EAAiB,CACnBC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAC,CAAE0F,OAAM9B,OAAQ4F,MAG1CzO,EAjUqB,sBAiUiB4E,GACjCjC,OAAM,kBAAME,MAAM,4CAEvB,IAAM6L,EAAY,YAAO/T,KAAKF,MAAMiQ,UAC9BiE,EAAeD,EAAalJ,WAAU,SAAA+F,GAAC,OAAIA,EAAEZ,OAASA,MACtC,IAAlBgE,GAAqBhU,KAAKwT,4BAC9BO,EAAaC,GAAb,eAAkCD,EAAaC,IAC/CD,EAAaC,GAAc9F,OAAS4F,EAEpC9T,KAAKmD,SAAS,CAAE4M,SAAUgE,M,yCAEV,IAAD,OACf,OAAI/T,KAAKF,MAAM4R,iBAEP,oCACI,yBAAK9Q,UAAU,aACX,yBACIA,UAAU,YACVuD,iBAAe,EACfC,IAAKpE,KAAK4R,eACVvN,YAAY,qBACZC,UAAW,SAACC,GACc,KAAlBA,EAAMC,QACN,EAAKyN,kBACkB,KAAlB1N,EAAMC,SAAgB,EAAKrB,SAAS,CAAEuO,kBAAkB,OAEzE,yBAAK9Q,UAAU,qBACX,4BAAQA,UAAU,gBAAgBE,QAASd,KAAKiS,iBAAhD,YAIR,yBAAKnR,QAAS,kBAAM,EAAKqC,SAAS,CAAEuO,kBAAkB,KAAU9Q,UAAU,gBAM9E,4BAAQE,QAASd,KAAKgS,qBAAsBpR,UAAU,kBAAkBF,MAAOV,KAAKH,MAAMU,QAAU,CAAE2D,UAAW,QAAW,IAA5H,O,0CAOS,IAAD,OAChBlE,KAAKwT,4BACA9L,MAAK,WACF,IAAMuM,EAAsB,EAAKtC,YAAYvO,QAAQ8Q,cAAc,QAC/DD,IACA,EAAKtC,YAAYvO,QAAQ6P,WAAagB,EAAoBE,iB,iCAK/DxM,GAAO,IAAD,OACPsC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAL,eAAoB3C,EAApB,GAA6B,CAAE7H,MAAO,EAAG6B,SAAU,MAG7D0D,EA5XyB,sBA4XiB4E,GACrCvC,MAAK,kBAAM,EAAKsL,gCAChBhL,OAAM,kBAAME,MAAM,qC,iCAGhBjE,GAAK,IAAD,OACXoB,EAjY2B,SAAApB,GAAE,6BAAoBA,GAiYjCmQ,CAA2BnQ,GAAK,CAAEiG,OAAQ,WACrDxC,MAAK,kBAAM,EAAKsL,gCAChBhL,OAAM,kBAAME,MAAM,yC,GAtWRjH,IAAMC,WCNdmT,I,yDA9Bb,WAAYxU,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXoO,OAAQ,SAEV,EAAKrJ,YAAc,EAAKA,YAAY5B,KAAjB,gBALF,E,0DASS,UAAtBjD,KAAKF,MAAMoO,OACblO,KAAKmD,SAAS,CAAE+K,OAAQ,WAExBlO,KAAKmD,SAAS,CAAE+K,OAAQ,Y,+BAI1B,OACE,yBAAKtN,UAAU,OACU,UAAtBZ,KAAKF,MAAMoO,OACV,kBAAC,EAAD,MACwB,WAAtBlO,KAAKF,MAAMoO,OACb,kBAAC,GAAD,MACE,KACJ,4BAAQtN,UAAU,aAAaE,QAASd,KAAK6E,aAA7C,oB,GAzBU5D,IAAMC,YCMJoT,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxN,MAAK,SAAAyN,GACJA,EAAaC,gBAEdpN,OAAM,SAAAK,GACLD,QAAQC,MAAMA,EAAMF,a","file":"static/js/main.75bca67d.chunk.js","sourcesContent":["/* Used for drags-n-drop */\nexport const ItemTypes = {\n    TASK: \"task\",\n    NOTE: \"note\",\n};","import \"./index.css\";\nimport React from \"react\";\nimport { DragSource, DropTarget } from \"react-dnd\";\nimport { ItemTypes } from \"../../helpers/constants\";\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHoverTarget: false,\n    };\n  }\n\n  render() {\n    const { status, taskText, deleteTask } = this.props;\n    const {\n      isDragging,\n      connectDragSource,\n      connectDropTarget,\n      hovered,\n      isEditing,\n    } = this.props; // DnD injected props\n\n    let taskColor = \"\";\n    let doneButtonColor = \"\";\n    if (status === 1) {\n      taskColor = \"\";\n      doneButtonColor = \"\";\n    } else if (status === 2) {\n      taskColor = \"#D6A115\";\n      doneButtonColor = \"\";\n    } else if (status === 3) {\n      taskColor = \"#509B5A\";\n      doneButtonColor = \"\";\n    }\n\n    return connectDropTarget(\n      connectDragSource(\n        <div style={isDragging ? { display: \"none\" } : {}}>\n          {hovered && <div className=\"hovered\"></div>}\n          <div className=\"task\" style={{ backgroundColor: taskColor }}>\n            {\n              <button onClick={deleteTask} className=\"x-button\">\n                &#9747;\n              </button>\n            }\n            {taskText}\n            {status ? ( // is a note if no status is found\n              <button\n                onClick={this.props.changeTaskState}\n                className=\"done-button\"\n              >\n                &#10004;\n              </button>\n            ) : (\n                <button\n                  style={{ visibility: \"hidden\" }}\n                >\n                  &#10004;\n                </button>\n              )}\n          </div>\n        </div>\n      )\n    );\n  }\n}\n\nconst sourceType = (props) => (props.status ? ItemTypes.TASK : ItemTypes.NOTE);\n\n\n/* Stuff for DnD */\nconst taskSource = {\n  beginDrag: (props) => {\n    const item = { timestamp: props.timestamp, position: props.position };\n    return item;\n  },\n};\n\nconst collectSource = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging(),\n});\n\nconst targetTypes = [ItemTypes.TASK, ItemTypes.NOTE];\n\nconst taskTarget = {\n  drop: (props, monitor, component) => {\n    if (monitor.didDrop()) return undefined;\n\n    let destinationPos = props.position;\n    if (\n      sourceType(props) === monitor.getItemType() &&\n      props.position > monitor.getItem().position\n    ) {\n      if (\n        (sourceType(props) === ItemTypes.TASK &&\n          monitor.getItem().timestamp === props.timestamp) ||\n        sourceType(props) === ItemTypes.NOTE\n      ) {\n        destinationPos--;\n      }\n    }\n\n    const source = { item: monitor.getItem(), type: monitor.getItemType() };\n    const destination = {\n      item: { timestamp: props.timestamp, position: destinationPos },\n      type: sourceType(props),\n    };\n\n    props.moveTask(source, destination);\n  },\n};\n\nconst collectTarget = (connect, monitor) => ({\n  highlighted: monitor.canDrop(),\n  hovered: monitor.isOver(),\n  connectDropTarget: connect.dropTarget(),\n});\n\nexport default DragSource(\n  sourceType,\n  taskSource,\n  collectSource\n)(DropTarget(targetTypes, taskTarget, collectTarget)(Task));\n","import React from \"react\";\nimport \"./index.css\";\nimport { DropTarget } from \"react-dnd\";\n\nimport Task from \"../tasks\";\nimport { ItemTypes } from \"../../helpers/constants\";\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n    };\n    this.taskTextRef = React.createRef();\n    this.onTaskSubmit = this.onTaskSubmit.bind(this);\n    this.enterEditMode = this.enterEditMode.bind(this);\n  }\n\n  enterEditMode() {\n    this.setState({ isEditing: true }, () => this.taskTextRef.current.focus());\n  }\n\n  onTaskSubmit() {\n    const text = this.taskTextRef.current.innerText;\n    this.props.addTask(text);\n    this.setState({ isEditing: false });\n  }\n\n  render() {\n    return this.props.connectDropTarget(\n      <div className=\"day-box\">\n        <h2>\n          {this.props.dayName}\n          {this.props.isToday ? (\n            <p style={{ color: \"red\" }}>{this.props.dayDate}</p>\n          ) : (\n              <p>{this.props.dayDate}</p>\n            )}\n        </h2>\n        {this.props.tasks.map((x) => (\n          <Task\n            key={`${x.id}`}\n            deleteTask={() => this.props.deleteTask(x.id)}\n            moveTask={(source, destination) => this.props.moveTask(source, destination)}\n            id={x.id}\n            taskText={x.text}\n            status={x.state}\n            timestamp={this.props.timestamp}\n            position={x.position}\n            changeTaskState={() => this.props.changeTaskState(x.id)}\n          />\n        ))}\n        {this.state.isEditing ? (\n          <>\n            <div className=\"form-area\" style={this.props.hovered ? { marginTop: \"80px\" } : {}}>\n              <div\n                className=\"text-area\"\n                contentEditable\n                ref={this.taskTextRef}\n                placeholder=\"Enter task text\"\n                onKeyDown={(event) => {\n                  if (event.keyCode === 13)\n                    this.onTaskSubmit()\n                  else if (event.keyCode === 27) this.setState({ isEditing: false })\n                }}\n\n\n              ></div>\n              <div className=\"buttons-container\">\n                <button className=\"submit-button\" onClick={this.onTaskSubmit}>&#10148;</button>\n              </div>\n\n            </div>\n            <div onClick={() => this.setState({ isEditing: false })} className=\"layerClick\"></div>\n          </>\n        ) : (\n            <button onClick={this.enterEditMode} className=\"add-task-button\" style={this.props.hovered ? { marginTop: \"80px\" } : {}}>\n              +\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst targetTypes = [ItemTypes.TASK, ItemTypes.NOTE];\n\nconst dayTarget = {\n  drop: (props, monitor, component) => {\n    if (monitor.didDrop()) return undefined;\n\n    const type = props.timestamp ? ItemTypes.TASK : ItemTypes.NOTE;\n\n    let destinationPos = props.tasks.length;\n    if (type === monitor.getItemType()) {\n      if ((type === ItemTypes.TASK && monitor.getItem().timestamp === props.timestamp) || type === ItemTypes.NOTE) {\n        destinationPos--;\n      }\n    }\n\n    const source = { item: monitor.getItem(), type: monitor.getItemType() };\n    const destination = { item: { timestamp: props.timestamp, position: destinationPos }, type };\n\n    props.moveTask(source, destination);\n  }\n}\n\nconst collectTarget = (connect, monitor) => ({\n  hovered: monitor.isOver({ shallow: true }),\n  connectDropTarget: connect.dropTarget(),\n})\n\nexport default DropTarget(targetTypes, dayTarget, collectTarget)(Day);\n","import React from \"react\";\nimport \"./index.css\";\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <button onClick={this.props.handleClick} className=\"button2\">\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React from \"react\";\nimport \"./index.css\";\n\nclass Arrow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return <i className={[`arrow arrow-${this.props.direction}`]}></i>;\n  }\n}\n\nexport default Arrow;\n","import React from \"react\";\nimport \"./index.css\";\nimport Arrow from \"../arrow\";\n\nclass NumberSelector2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"numberSelector2\">\n        <span>Week</span>\n        <div className={\"numberSelectorBox\"}>{this.props.value}</div>\n        <div className=\"buttonBox\">\n          <button onClick={this.props.handleClickUp} className=\"button2\">\n            <Arrow direction=\"up\" />\n          </button>\n          <button onClick={this.props.handleClickDown} className=\"button2\">\n            <Arrow direction=\"down\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NumberSelector2;\n","const httpRequestJson = async (url, options={}) => {\n    const res = await fetch(url, { cache: \"no-store\", ...options});\n\n    if(!res.ok) {\n        throw new Error(\"Failed to fetch content\")\n    }\n    \n    return await res.json();\n}\n\nexport { httpRequestJson };","import React from \"react\";\nimport Day from \"../day\";\nimport \"./index.css\";\nimport Button from \"../button\";\nimport Arrow from \"../arrow\";\nimport NumberSelector2 from \"../numberSelector2\";\nimport { httpRequestJson } from \"../../helpers/requests\";\nimport Backend from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\n\n\nimport { ItemTypes } from \"../../helpers/constants\";\n\nconst weekEndpoint = (year, week) => `/week?week=${year}${week}`;\nconst postTaskEndpoint = (date) => `/week?week=${date}`;\nconst deleteTaskEndpoint = (id) => `/week?week=${id}`;\nconst patchTaskEndpoint = \"/week?key=value\";\nconst getNotesEndpoint = \"/notes?key=value\";\nconst postNotesEndpoint = \"/notes?key=value\";\nconst deleteNotesEndpoint = (id) => `/notes?id=${id}`;\nconst patchNotesEndpoint = \"/notes?key=value\";\n\nconst weekDays = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\n\nconst yearMonths = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nclass Week extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: [\n        { date: \"20200416\", tasks: [] },\n        { date: \"20200417\", tasks: [] },\n        { date: \"20200418\", tasks: [] },\n        { date: \"20200419\", tasks: [] },\n        { date: \"20200420\", tasks: [] },\n        { date: \"20200421\", tasks: [] },\n        { date: \"20200422\", tasks: [] },\n      ],\n\n      notes: [],\n\n      chosenWeek: this.getCurrentWeekNum(),\n      chosenYear: this.getCurrentYear()\n    };\n\n    this.addTask = this.addTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n    this.moveTask = this.moveTask.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchWeekToState(this.state.chosenYear, this.state.chosenWeek);\n    this.fetchNotesToState();\n  }\n\n  fetchWeekToState(year, week) {\n    httpRequestJson(weekEndpoint(year, week))\n      .then((data) => {\n        data.forEach((day) =>\n          day.tasks.sort((a, b) => a.position - b.position)\n        );\n        this.setState({ days: data });\n      })\n      .catch((err) => {\n        alert(err.message);\n        console.error(err);\n      });\n  }\n\n  fetchNotesToState() {\n    httpRequestJson(getNotesEndpoint)\n      .then((data) => {\n        data.sort((a, b) => a.position - b.position);\n        this.setState({ notes: data });\n      })\n      .catch((err) => {\n        alert(err.message);\n        console.error(err);\n      });\n  }\n\n  getCurrentWeekNum() {\n    let yr2 = new Date();\n    let yr = new Date().getFullYear();\n    let tdt = new Date(`January 4, ${yr}   01:15:00`);\n    return (\n      1 +\n      Math.round(\n        ((yr2.getTime() - tdt.getTime()) / 86400000 -\n          3 +\n          ((tdt.getDay() + 6) % 7)) /\n        7\n      )\n    );\n  }\n\n  getCurrentWeekDay() {\n    let day = new Date().getDay();\n    if (day === 0) {\n      return weekDays[6];\n    }\n    return weekDays[day - 1];\n  }\n\n  getCurrentDayNumber() {\n    let today = new Date().getDate();\n    console.log(today);\n    return today;\n  }\n\n  getCurrentYearMonth() {\n    let month = new Date().getMonth();\n    return yearMonths[month];\n  }\n\n  getCurrentYearMonthNumber() {\n    let month = new Date().getMonth() + 1;\n    if (month < 10) {\n      var zero = '0';\n      month = zero.concat(month);\n    }\n    return month;\n  }\n\n  getCurrentYear() {\n    return new Date().getFullYear();\n  }\n\n\n  SetCurrentWeekState = () => {\n    const newWeek = this.getCurrentWeekNum();\n    this.fetchWeekToState(this.getCurrentYear(), newWeek);\n    this.setState({\n      chosenYear: this.getCurrentYear(), chosenWeek: newWeek,\n    });\n  };\n\n  timeBlockDisplay() {\n    let d = new Date().getDay();\n    let weekDate = this.state.days[d].date;\n    let month = parseInt(weekDate.slice(4, 6));\n    let year = weekDate.slice(0, 4);\n    return yearMonths[month - 1] + \" \" + year;\n  }\n\n  longYear(yearIn) {\n    let year = yearIn;\n    let yearSubOne = year - 1;\n    let weekVariable = ((year + Math.floor((year / 4)) - Math.floor((year / 100)) + Math.floor((year / 400))) % 7)\n    let weekVariable2 = ((yearSubOne + Math.floor((yearSubOne / 4)) - Math.floor((yearSubOne / 100)) + Math.floor((yearSubOne / 400))) % 7)\n    if (weekVariable === 4 || weekVariable2 === 3)\n      return true;\n    else return false;\n  }\n\n  clickUp = () => {\n    let newWeek = this.state.chosenWeek + 1;\n\n    if (newWeek === 53 && (this.longYear(this.state.chosenYear) === false)) {\n      newWeek = 1;\n      this.fetchWeekToState(this.state.chosenYear + 1, newWeek);\n      this.setState({\n        chosenYear: this.state.chosenYear + 1, chosenWeek: newWeek\n      });\n    }\n    else if (newWeek === 53 && (this.longYear(this.state.chosenYear))) {\n      this.fetchWeekToState(this.state.chosenYear, newWeek);\n      this.setState({\n        chosenWeek: newWeek,\n      });\n    }\n    else if (newWeek === 54) {\n      newWeek = 1\n      this.fetchWeekToState(this.state.chosenYear + 1, newWeek);\n      this.setState({\n        chosenYear: this.state.chosenYear + 1, chosenWeek: newWeek\n      });\n    }\n    else {\n      this.fetchWeekToState(this.state.chosenYear, newWeek);\n      this.setState({\n        chosenYear: this.state.chosenYear, chosenWeek: newWeek,\n      });\n    }\n  };\n\n  clickDown = () => {\n    let newWeek = this.state.chosenWeek - 1;\n    if (newWeek === 0 && this.longYear(this.state.chosenYear - 1)) {\n      newWeek = 53\n      this.fetchWeekToState(this.state.chosenYear - 1, newWeek);\n      this.setState({\n        chosenYear: this.state.chosenYear - 1, chosenWeek: newWeek\n      });\n    }\n    else if (newWeek === 0 && !this.longYear(this.state.chosenYear - 1)) {\n      newWeek = 52\n      this.fetchWeekToState(this.state.chosenYear - 1, newWeek);\n      this.setState({\n        chosenYear: this.state.chosenYear - 1, chosenWeek: newWeek\n      });\n    }\n    else {\n      this.fetchWeekToState(this.state.chosenYear, newWeek);\n      this.setState({\n        chosenYear: this.state.chosenYear, chosenWeek: newWeek\n      });\n    }\n  };\n\n  addTask(text, date, dayIndex, position = undefined) {\n    const pos = position || this.state.days[dayIndex].tasks.length;\n    const newTask = {\n      text,\n      date,\n      state: 1,\n      position: pos\n    };\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newTask),\n    };\n\n    // Ensures no modification of the state object without setState\n    const daysCopy = [...this.state.days];\n    daysCopy[dayIndex] = { ...daysCopy[dayIndex] };\n    daysCopy[dayIndex].tasks = [...daysCopy[dayIndex].tasks];\n    if (position === undefined) {\n      daysCopy[dayIndex].tasks.push(newTask);\n    }\n    else {\n      daysCopy[dayIndex].tasks = this.insertAndShiftTask(daysCopy[dayIndex].tasks, newTask, pos);\n    }\n    this.setState({ days: daysCopy }); // Id gets added when the request resolves\n\n    httpRequestJson(postTaskEndpoint(date), requestOptions)\n      .then((data) => {\n        const newDaysCopy = [...daysCopy];\n        newDaysCopy[dayIndex] = { ...newDaysCopy[dayIndex] };\n        newDaysCopy[dayIndex].tasks = [...newDaysCopy[dayIndex].tasks];\n        newDaysCopy[dayIndex].tasks[pos] = { ...newDaysCopy[dayIndex].tasks[pos], id: data[0] }\n        this.setState({ days: newDaysCopy });\n      })\n      .catch(() => alert(\"Failed to create task\"));\n  }\n\n  deleteTask(id, dayIndex) {\n    httpRequestJson(deleteTaskEndpoint(id), { method: \"DELETE\" }).catch(() =>\n      alert(\"Failed to delete task\")\n    );\n\n    const daysCopy = [...this.state.days];\n    daysCopy[dayIndex] = { ...daysCopy[dayIndex] };\n    daysCopy[dayIndex].tasks = [...daysCopy[dayIndex].tasks];\n    const taskIndex = daysCopy[dayIndex].tasks.findIndex((x) => x.id === id);\n    daysCopy[dayIndex].tasks.splice(taskIndex, 1);\n\n    this.correctPositions(daysCopy[dayIndex].tasks);\n\n    this.setState({ days: daysCopy });\n  }\n\n  // Could definitely use some refactoring, uses way too much duplication but does the job\n  moveTask(source, destination) {\n    if (source.type === ItemTypes.TASK && destination.type === ItemTypes.TASK) {\n      this.moveDayTask(\n        { date: source.item.timestamp, position: source.item.position },\n        {\n          date: destination.item.timestamp,\n          position: destination.item.position,\n        }\n      );\n    } else if (\n      source.type === ItemTypes.NOTE &&\n      destination.type === ItemTypes.NOTE\n    ) {\n      this.moveNote(source.item.position, destination.item.position);\n    }\n    else if (source.type === ItemTypes.TASK && destination.type === ItemTypes.NOTE) {\n      this.moveDayTaskToNote(source.item.timestamp, source.item.position, destination.item.position);\n    }\n    else if (source.type === ItemTypes.NOTE && destination.type === ItemTypes.TASK) {\n      this.moveNoteToDayTask(source.item.position, destination.item.timestamp, destination.item.position);\n    }\n  }\n\n  // Expects each parameter to be { date: yyyymmdd, position: X }\n  moveDayTask(source, destination) {\n    const sourceIndex = this.state.days.findIndex(\n      (day) => source.date === day.date\n    );\n    const destinationIndex = this.state.days.findIndex(\n      (day) => destination.date === day.date\n    );\n\n    // Duplicates week, relevant days and their tasks\n    const daysCopy = [...this.state.days];\n    daysCopy[sourceIndex] = { ...daysCopy[sourceIndex] };\n    daysCopy[destinationIndex] = { ...daysCopy[destinationIndex] };\n    daysCopy[sourceIndex].tasks = [...daysCopy[sourceIndex].tasks];\n    daysCopy[destinationIndex].tasks = [...daysCopy[destinationIndex].tasks];\n\n    // Extracts source task\n    const sourceTask = daysCopy[sourceIndex].tasks.find(\n      (task) => task.position === source.position\n    );\n    // Removes source task from its origin\n    daysCopy[sourceIndex].tasks = daysCopy[sourceIndex].tasks.filter(\n      (task) => task.position !== source.position\n    );\n    // Remove positional gap after removal\n    this.correctPositions(daysCopy[sourceIndex].tasks);\n\n    // Makes sure task has correct date to where it's positioned\n    sourceTask.date = daysCopy[destinationIndex].date;\n\n    // Slots in source task into destination and shifts tasks position below\n    const newDayTasks = this.insertAndShiftTask(daysCopy[destinationIndex].tasks, sourceTask, destination.position);\n    daysCopy[destinationIndex].tasks = newDayTasks;\n    this.setState({ days: daysCopy });\n\n    let patchBody;\n    if (source.date === destination.date) {\n      patchBody = daysCopy[sourceIndex].tasks.filter((_, i) =>\n        i >= Math.min(source.position, destination.position));\n\n      // Weird backend specific clause\n      if (source.position < destination.position) {\n        const patchDestinationIndex = patchBody.findIndex(x => x.id === sourceTask.id);\n        patchBody[patchDestinationIndex] = { ...patchBody[patchDestinationIndex], position: patchBody[patchDestinationIndex].position + 1 };\n      }\n    }\n    else {\n      const sourcePatchBody = daysCopy[sourceIndex].tasks.filter((_, i) => i >= source.position);\n      const destinationPatchBody = daysCopy[destinationIndex].tasks.filter((_, i) => i >= destination.position);\n      patchBody = [...sourcePatchBody, ...destinationPatchBody];\n    }\n\n    const requestOptions = {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(patchBody),\n    };\n\n    httpRequestJson(patchTaskEndpoint, requestOptions)\n      .catch(() => alert(\"Failed to move task\"));\n  }\n\n  moveNote(sourcePosition, destinationPosition) {\n    // Extracts note and closes positional gap\n    let notesCopy = [...this.state.notes];\n    const [sourceNote] = notesCopy.splice(sourcePosition, 1);\n    this.correctPositions(notesCopy);\n\n    notesCopy = this.insertAndShiftTask(\n      notesCopy,\n      sourceNote,\n      destinationPosition\n    );\n\n    this.setState({ notes: notesCopy });\n\n    const patchBody = notesCopy.filter((_, i) =>\n      i >= Math.min(sourcePosition, destinationPosition));\n\n    if (sourcePosition < destinationPosition) {\n      const notesDestinationIndex = patchBody.findIndex(x => x.id === sourceNote.id);\n      patchBody[notesDestinationIndex] = { ...patchBody[notesDestinationIndex], position: patchBody[notesDestinationIndex].position + 1 }\n    }\n\n    const requestOptions = {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(patchBody),\n    };\n\n    httpRequestJson(patchNotesEndpoint, requestOptions)\n      .catch(() => alert(\"Failed to move note\"));\n  }\n\n  moveDayTaskToNote(dayDate, dayPosition, notePosition) {\n    const sourceIndex = this.state.days.findIndex(day => dayDate === day.date);\n\n    const { id, text } = this.state.days[sourceIndex].tasks[dayPosition];\n\n    this.deleteTask(id, sourceIndex);\n    this.addNote(text, notePosition);\n  }\n\n  moveNoteToDayTask(notePosition, dayDate, dayPosition) {\n    const destinationIndex = this.state.days.findIndex(day => dayDate === day.date);\n\n    const { date } = this.state.days[destinationIndex];\n    const { id, text } = this.state.notes[notePosition];\n\n    this.deleteNote(id);\n    this.addTask(text, date, destinationIndex, dayPosition);\n  }\n\n  // Removes gaps in position through modification\n  correctPositions(arr) {\n    arr.sort((a, b) => a.position - b.position);\n    arr.forEach((x, i) => (x.position = i));\n  }\n\n  insertAndShiftTask(tasks, newTask, newPos) {\n    const firstPart = tasks.slice(0, newPos);\n    const secondPart = tasks\n      .slice(newPos, tasks.length)\n      .map((x) => ({ ...x, position: x.position + 1 }));\n\n    return [...firstPart, { ...newTask, position: newPos }, ...secondPart];\n  }\n\n  addNote(text, position = undefined) {\n    const pos = position || this.state.notes.length;\n    const newNote = {\n      text,\n      position: pos\n    };\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newNote),\n    };\n\n    let notesCopy = [...this.state.notes];\n    if (position === undefined) {\n      notesCopy.push(newNote);\n    }\n    else {\n      notesCopy = this.insertAndShiftTask(notesCopy, newNote, pos);\n    }\n    this.setState({ notes: notesCopy });\n\n    httpRequestJson(postNotesEndpoint, requestOptions)\n      .then((data) => {\n        const newNotesCopy = [...notesCopy];\n        newNotesCopy[pos] = { ...newNotesCopy[pos], id: data[0] };\n        this.setState({ notes: newNotesCopy });\n      })\n      .catch(() => alert(\"Failed to create note\"));\n  }\n\n  deleteNote(id) {\n    httpRequestJson(deleteNotesEndpoint(id), { method: \"DELETE\" }).catch(() =>\n      alert(\"Failed to delete task\")\n    );\n\n    const notesCopy = [...this.state.notes];\n    const noteIndex = notesCopy.findIndex((x) => x.id === id);\n    notesCopy.splice(noteIndex, 1);\n\n    this.correctPositions(notesCopy);\n\n    this.setState({ notes: notesCopy });\n  }\n\n  dateToDayConverter = (iDate) => {\n    let date = typeof iDate === \"string\" ? iDate.substr(6, 7) : null;\n    return parseInt(date);\n  };\n\n  isTodaysDate(date) {\n    if (date.substring(0, 4) === this.getCurrentYear() &&\n      date.substring(4, 6) === this.getCurrentYearMonthNumber() &&\n      (date.substring(6, 8) === this.getCurrentDayNumber())) {\n      return true;\n    }\n    return false;\n  }\n\n  onChangeTaskState(taskId, i) {\n    const daysCopy = [...this.state.days];\n    daysCopy[i] = { ...daysCopy[i] };\n    daysCopy[i].tasks = [...daysCopy[i].tasks];\n    const taskIndex = daysCopy[i].tasks.findIndex((x) => x.id === taskId);\n    daysCopy[i].tasks[taskIndex] = { ...daysCopy[i].tasks[taskIndex] };\n    const task = daysCopy[i].tasks[taskIndex];\n\n    let newState;\n    if (task.state === 3) {\n      newState = 1;\n    } else {\n      newState = task.state + 1;\n    }\n\n    task.state = newState;\n\n    const requestOptions = {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify([task]),\n    };\n    httpRequestJson(patchTaskEndpoint, requestOptions).catch(() =>\n      alert(\"Failed to update state of task\")\n    );\n\n    this.setState({ days: daysCopy });\n  }\n\n  render() {\n    return (\n      <DndProvider backend={Backend}>\n        <div className=\"week-view\">\n          <div className=\"week\">\n            <div className=\"week-header\">\n              <div style={{ paddingLeft: \"15%\" }}>\n                <NumberSelector2\n                  handleClickUp={this.clickUp}\n                  handleClickDown={this.clickDown}\n                  value={this.state.chosenWeek}\n                />\n              </div>\n              <div>\n                <h1 style={{ color: \"rgba(255,255,255,0.8)\" }}>{this.timeBlockDisplay()}</h1>\n              </div>\n              <div style={{ paddingRight: \"15%\" }}>\n                <Button handleClick={this.SetCurrentWeekState}>\n                  Current week\n                </Button>\n              </div>\n            </div>\n            <div className=\"days\">\n              {weekDays.map((x, i) => {\n                const { tasks, date } = this.state.days[i];\n                return (\n                  <Day\n                    todaysDay={this.getCurrentWeekDay()}\n                    dayDate={this.dateToDayConverter(this.state.days[i].date)}\n                    isToday={this.isTodaysDate(this.state.days[i].date)}\n                    dayName={x}\n                    tasks={tasks}\n                    addTask={(text) => this.addTask(text, date, i)}\n                    deleteTask={(id) => this.deleteTask(id, i)}\n                    moveTask={(source, destination) =>\n                      this.moveTask(source, destination)\n                    }\n                    timestamp={date}\n                    changeTaskState={(taskId) =>\n                      this.onChangeTaskState(taskId, i)\n                    }\n                    key={JSON.stringify(this.state.days[i])}\n                  />\n                );\n              })}\n              <button onClick={this.clickDown} className=\"previous-week\">\n                <Arrow direction=\"left\" />\n              </button>\n              <button onClick={this.clickUp} className=\"next-week\">\n                <Arrow direction=\"right\" />\n              </button>\n            </div>\n          </div>\n          <div className=\"note-container\">\n            <Day\n              dayName=\"Notes\"\n              tasks={this.state.notes}\n              addTask={this.addNote}\n              deleteTask={this.deleteNote}\n              moveTask={this.moveTask}\n            />\n          </div>\n        </div>\n      </DndProvider>\n    );\n  }\n}\n\nexport default Week;\n","import \"./index.css\";\nimport React from \"react\";\n\nclass ProjectTask extends React.Component {\n  render() {\n    const { projectName, active, onDelete, onToggleActive } = this.props;\n\n    return (\n      <div className=\"project-wrapper\">\n        <div className=\"project-task\" style={{ backgroundColor: active ? \"var(--project-green)\" : \"rgb(40,40,40)\" }}>\n          <button onClick={() => onDelete(projectName)} className=\"x-button\">X</button>\n          {projectName}\n          <button onClick={onToggleActive} className=\"done-button\">\n            {active ? \"Set inactive\" : \"Set active\"}\n          </button>\n        </div>\n        <div className=\"project-line\">\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectTask;","const dayDistance = (firstDate, secondDate) => Math.round(Math.abs(firstDate - secondDate) / (1000 * 60 * 60 * 24));\nconst stringToDate = (str) => new Date(`${str.substr(0, 4)}-${str.substr(4, 2)}-${str.substr(6, 2)}`);\nconst dateToString = (date) => date.toISOString().substr(0, 10).replace(/-/g, \"\");\nconst copyDate = date => new Date(date.getTime());\nconst isEqualDates = (firstDate, secondDate) => dateToString(firstDate) === dateToString(secondDate);\n\nexport { dayDistance, stringToDate, dateToString, copyDate, isEqualDates }","import \"./index.css\";\nimport React from \"react\";\n\nimport { dayDistance, stringToDate } from \"../../helpers/date\"\n\n\nclass TimelineTasks extends React.Component {\n  render() {\n    const { tasks } = this.props;\n\n    const heightSplit = Math.max(...tasks.filter(t => t !== undefined && t.heightSplit !== undefined).map(t => t.heightSplit), tasks.length)\n\n    return (\n      <div className=\"timeline-tasks\">\n        {tasks.map(t => this.renderTask(heightSplit, t))}\n      </div>\n    );\n  }\n\n  renderTask(heightSplit, task) {\n    const stylePrep = { height: `calc(100% / ${heightSplit})` };\n\n    if (task !== undefined) {\n      const taskWidth = dayDistance(stringToDate(task.date), stringToDate(task.endDate));\n      stylePrep.width = `calc((${taskWidth + 1} * (100% + 2px)) - 2px)`; /* Accounts for day borders */\n    }\n    else {\n      stylePrep.visibility = \"hidden\";\n    }\n\n    return (\n      <div className=\"timeline-task\" style={stylePrep}>\n        {task && <p>{task.text}</p>}\n        <button className=\"delete-timeline-task\" onClick={() => this.props.deleteTask(task.id)}>&#x292B;</button>\n      </div>\n    )\n  }\n}\n\nexport default TimelineTasks;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport sv from \"date-fns/locale/sv\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { dateToString } from \"../../helpers/date\";\n\nclass AddTimelineTaskModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        registerLocale(\"sv\", sv);\n\n        const startDate = new Date();\n        const endDate = new Date();\n        endDate.setDate(endDate.getDate() + 1)\n\n        this.state = {\n            selectedProject: props.projects[0].name,\n            startDate,\n            endDate,\n            taskText: \"\",\n        };\n\n        this.submitTask = this.submitTask.bind(this);\n    }\n\n    render() {\n        return (\n            <div className=\"modal\" onClick={e => {\n                if (e.target === e.currentTarget) // Prevents firing onClick from child elements\n                    this.props.onClose();\n            }}>\n                <div className=\"add-task-modal\">\n                    <h1 className=\"modal-title\">Add Task</h1>\n                    <div className=\"field-columns\">\n                        <div className=\"field-titles\">\n                            <p className=\"field-row\">Project</p>\n                            <p className=\"field-row\">Start date</p>\n                            <p className=\"field-row\">End date</p>\n                            <p className=\"field-row\">Task text</p>\n                        </div>\n                        <div className=\"field-inputs\">\n                            <div className=\"field-row\">\n                                <select value={this.state.selectedProject} className=\"project-selector\" onChange={e => this.setState({ selectedProject: e.target.value })}>\n                                    {this.props.projects.map(x => <option value={x.name}>{x.name}</option>)}\n                                </select>\n                            </div>\n                            <div className=\"field-row\">\n                                <DatePicker\n                                    selected={this.state.startDate}\n                                    onChange={date => this.setState({ startDate: date })}\n                                    locale=\"sv\"\n                                    dateFormat=\"dd/MM/yyyy\"\n                                />\n                            </div>\n                            <div className=\"field-row\">\n                                <DatePicker\n                                    selected={this.state.endDate}\n                                    onChange={date => this.setState({ endDate: date })}\n                                    locale=\"sv\"\n                                    dateFormat=\"dd/MM/yyyy\"\n                                />\n                            </div>\n                            <div className=\"field-row\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Enter task text\"\n                                    value={this.state.taskText}\n                                    onChange={e => this.setState({ taskText: e.target.value })} />\n                            </div>\n                        </div>\n                    </div>\n                    <button className=\"modal-submit-button\" onClick={this.submitTask}>Submit</button>\n                </div>\n            </div>\n        )\n    }\n\n    submitTask() {\n        const { startDate, endDate, selectedProject, taskText } = this.state;\n\n        const result = {\n            date: dateToString(startDate),\n            endDate: dateToString(endDate),\n            project: this.props.projects.find(p => p.name === selectedProject),\n            text: taskText,\n        }\n\n        this.props.onSubmit(result);\n    }\n}\n\nexport default AddTimelineTaskModal;","import React from \"react\";\nimport \"./index.css\";\nimport ProjectTask from \"../projectTasks\"\nimport { httpRequestJson } from \"../../helpers/requests\";\nimport TimelineTasks from \"../timelineTasks\";\nimport AddTimelineTaskModal from \"../addTimelineTaskModal\";\n\nimport { copyDate, isEqualDates, dateToString } from \"../../helpers/date\";\n\nconst getProjectEndpoint = activeState => `/projects?select=${activeState}`;\nconst postProjectEndpoint = \"/projects?key=value\";\nconst deleteProjectEndpoint = name => `/projects?name=${name}`;\nconst patchProjectEndpoint = \"/projects?key=value\";\nconst getTimelineTaskEndpoint = (projects, startDate, endDate) => `/timeline?parameters=${projects.join(\"&\")}&${startDate}&${endDate}`;\nconst postTimelineTaskEndpoint = \"/timeline?key=value\";\nconst deleteTimelineTaskEndpoint = id => `/timeline?id=${id}`;\n\nconst DAYS_TO_LOAD = 14;\n\nconst weekDays = [\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\",\n];\n\nconst months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Okt\",\n    \"Nov\",\n    \"Dec\",\n];\n\nclass Timeline extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const startDate = new Date();\n\n        startDate.setDate(startDate.getDate() - 28);\n\n        this.state = {\n            startDate,\n            rangeT: 70,\n            projectFilter: \"any\", // \"any\", \"active\", \"inactive\"\n            projects: [],\n            tasks: [],\n            days: [],\n            isLoading: false,\n            viewingRange: \"month\",\n            inAddMode: false,\n            isEditingProject: false,\n        }\n\n        this.scrollerRef = React.createRef();\n        this.projectTextRef = React.createRef();\n\n        this.dateOffsetFromStart = this.dateOffsetFromStart.bind(this);\n        this.getWeekDay = this.getWeekDay.bind(this);\n        this.handleScroll = this.handleScroll.bind(this);\n        this.getMonth = this.getMonth.bind(this);\n        this.submitTask = this.submitTask.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.enterProjectEditMode = this.enterProjectEditMode.bind(this);\n        this.onProjectSumbit = this.onProjectSumbit.bind(this);\n        this.deleteProject = this.deleteProject.bind(this);\n        this.editProjectActive = this.editProjectActive.bind(this);\n    }\n\n    // Fetches projects and tasks and transforms it to days before setting state\n    async fetchTransformDataToState() {\n        const { tasks, projects } = await this.fetchProjectsAndTasks();\n        const days = this.tasksToDays(tasks, projects);\n\n        await this.setStatePromise({ tasks, projects, days });\n    }\n\n    // Fetches tasks and transforms it to days before setting state\n    async fetchTransformTasksToState() {\n        const { projects } = this.state;\n        const tasks = await this.fetchTasks(projects);\n        const days = this.tasksToDays(tasks, projects);\n\n        await this.setStatePromise({ tasks, days });\n        this.setState({ isLoading: false });\n    }\n\n    async fetchProjectsAndTasks() {\n        const projects = await this.fetchProjects();\n        const tasks = await this.fetchTasks(projects);\n        return { projects, tasks };\n    }\n\n    async fetchProjects() {\n        try {\n            const { projectFilter } = this.state;\n            return await httpRequestJson(getProjectEndpoint(projectFilter));\n        }\n        catch (e) {\n            alert(\"Failed to fetch timeline projects\");\n        }\n    }\n\n    async fetchTasks(projects) {\n        try {\n            const { startDate, rangeT } = this.state;\n            const endDate = copyDate(startDate);\n            endDate.setDate(endDate.getDate() + rangeT);\n            return await httpRequestJson(getTimelineTaskEndpoint(projects.map(x => x.name), dateToString(startDate), dateToString(endDate)));\n        }\n        catch (e) {\n            alert(\"Failed to fetch timeline tasks\");\n        }\n    }\n\n    tasksToDays(tasks, projects) {\n        const days = [];\n        let startedTasks = [];\n\n        for (let i = 0; i < this.state.rangeT; i++) {\n            const dayDate = copyDate(this.state.startDate);\n            dayDate.setDate(dayDate.getDate() + i);\n\n            const dayTasks = tasks.filter(task => task.date === dateToString(dayDate));\n\n            const orderedDayTasks = projects.map(p => {\n                const startedProjectTasks = startedTasks.filter(t => t.project.name === p.name);\n                const combinedTasks = [\n                    ...startedProjectTasks.map(() => undefined),\n                    ...dayTasks.filter(t => t.project.name === p.name)\n                ];\n                const heightSplit = combinedTasks.length;\n                startedProjectTasks.forEach(t => t.heightSplit = t.heightSplit > heightSplit ? t.heightSplit : heightSplit);\n\n                return combinedTasks;\n            });\n\n            startedTasks.push(...dayTasks);\n            startedTasks = startedTasks.filter(task => task.endDate !== dateToString(dayDate));\n\n            days.push({\n                tasks: orderedDayTasks, // Array for each day containing array for all task for a project\n                date: copyDate(dayDate),\n            });\n        }\n\n        return days;\n    }\n\n    dateOffsetFromStart(offset) {\n        const date = copyDate(this.state.startDate);\n        date.setDate(date.getDate() + offset);\n        return date;\n    }\n\n    getWeekDay(date) {\n        return weekDays[date.getDay()];\n    }\n\n    getMonth(date) {\n        return months[date.getMonth()];\n    }\n\n    goBack() {\n        const scrollWidth = this.scrollerRef.current.scrollWidth;\n        const newDate = copyDate(this.state.startDate);\n        newDate.setDate(newDate.getDate() - DAYS_TO_LOAD)\n        this.setState({ startDate: newDate, rangeT: this.state.rangeT + DAYS_TO_LOAD }, () =>\n            this.fetchTransformTasksToState()\n                .then(() => {\n                    this.scrollerRef.current.scrollLeft += this.scrollerRef.current.scrollWidth - scrollWidth\n                }));\n    }\n    goForward() {\n        this.setState({ rangeT: this.state.rangeT + DAYS_TO_LOAD }, () =>\n            this.fetchTransformTasksToState());\n    }\n\n    isFocusedDate(date) {\n        const todayDate = new Date();\n        todayDate.setDate(todayDate.getDate() - 9);\n        return isEqualDates(date, todayDate);\n    }\n\n    handleScroll() {\n        if (this.state.isLoading === false) {\n            const scrollLeft = this.scrollerRef.current.scrollLeft;\n            const scrollWidth = this.scrollerRef.current.scrollWidth;\n            const viewportWidth = this.scrollerRef.current.offsetWidth;\n\n            if (scrollLeft < 500) {\n                this.setState({ isLoading: true });\n                this.goBack();\n            }\n            else if (scrollWidth - scrollLeft - viewportWidth < 500) {\n                this.setState({ isLoading: true });\n                this.goForward();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"Timeline\">\n                    <div className=\"Timeline-header\">\n                        <div></div>\n                        <h1>Timeline</h1>\n                        <div className=\"right-part\">\n                            <select value={this.state.viewingRange} className=\"viewingRange\" onChange={e => this.setState({ viewingRange: e.target.value })}>\n                                <option value=\"week\">Week</option>\n                                <option value=\"month\">Month</option>\n                                <option value=\"two-months\">2 Months</option>\n                                <option value=\"three-months\">3 Months</option>\n                            </select>\n                            <button className=\"addTimlineTaskButton\" style={{ backgroundColor: \"rgb(48,48,48)\", color: \"rgba(255,255,255,0.8)\", border: \"none\" }}\n                                onClick={() => this.setState({ inAddMode: true })} > + Add task</button>\n                        </div>\n                    </div>\n                    <div className=\"Timeline-holder\">\n                        <div className=\"project-day-container\">\n                            <div className=\"projects-container\">\n                                <div className=\"Project-header\">\n                                    <select\n                                        className=\"projectFilter\"\n                                        value={this.state.projectFilter}\n                                        onChange={e => {\n                                            this.setState({ projectFilter: e.target.value }, () =>\n                                                this.fetchTransformDataToState());\n                                        }}>\n                                        <option value=\"any\">Any activity</option>\n                                        <option value=\"active\">Only active</option>\n                                        <option value=\"inactive\">Only inactive</option>\n                                    </select>\n                                </div>\n                                {this.state.projects.map((x) =>\n                                    <ProjectTask\n                                        projectName={x.name}\n                                        active={x.active}\n                                        onDelete={this.deleteProject}\n                                        onToggleActive={() => this.editProjectActive(x.name, !x.active)} />\n                                )}\n                                {this.renderAddProject()}\n                            </div>\n                            <div ref={this.scrollerRef} className=\"day-holder\" onScroll={this.handleScroll}>\n                                {this.state.days.map(day => {\n                                    const dayDate = day.date;\n                                    const today = new Date();\n                                    return (\n                                        <div className={`day-Timeline ${this.state.viewingRange}`} {...(this.isFocusedDate(dayDate) ? { id: \"key\" } : {})}>\n                                            <div className=\"day-header\" style={isEqualDates(today, dayDate) ? { color: \"red\" } : {}}>\n                                                {this.getWeekDay(dayDate)} <br />\n                                                {this.getMonth(dayDate)} <br />\n                                                {dayDate.getDate()}\n                                            </div>\n                                            {day.tasks.map((tasks, i) => (\n                                                <TimelineTasks\n                                                    tasks={tasks}\n                                                    deleteTask={this.deleteTask} />\n                                            ))}\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {this.state.inAddMode && (\n                    <AddTimelineTaskModal\n                        className=\"addTimelineTask\"\n                        projects={this.state.projects}\n                        onSubmit={data => {\n                            this.submitTask(data);\n                            this.setState({ inAddMode: false });\n                        }}\n                        onClose={() => this.setState({ inAddMode: false })} />\n                )}\n            </>\n        );\n    }\n\n    onProjectSumbit() {\n        const projectName = this.projectTextRef.current.innerText.trim();\n\n        if (projectName === \"\")\n            return;\n\n        const body = {\n            name: projectName,\n            active: true,\n        };\n\n        const requestOptions = {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n        }\n\n        httpRequestJson(postProjectEndpoint, requestOptions)\n            .then(() => this.fetchTransformDataToState())\n            .then(this.setStatePromise({ isEditingProject: false }))\n            .catch(() => alert(\"Failed to create project\"));\n    }\n\n    enterProjectEditMode() {\n        this.setState({ isEditingProject: true }, () => this.projectTextRef.current.focus());\n    }\n\n    deleteProject(name) {\n        httpRequestJson(deleteProjectEndpoint(name), { method: \"DELETE\" })\n            .then(() => this.fetchProjects())\n            .then(projects => this.setStatePromise({ projects }))\n            .catch(() => alert(\"Failed to delete project\"));\n    }\n\n    editProjectActive(name, isActive) {\n        const requestOptions = {\n            method: \"PATCH\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify([{ name, active: isActive }]),\n        }\n\n        httpRequestJson(patchProjectEndpoint, requestOptions)\n            .catch(() => alert(\"Failed to change project active state\"));\n\n        const projectsCopy = [...this.state.projects];\n        const projectIndex = projectsCopy.findIndex(p => p.name === name);\n        if (projectIndex === -1) this.fetchTransformDataToState(); // Refetches if project wasn't found\n        projectsCopy[projectIndex] = { ...projectsCopy[projectIndex] };\n        projectsCopy[projectIndex].active = isActive;\n\n        this.setState({ projects: projectsCopy });\n    }\n    renderAddProject() {\n        if (this.state.isEditingProject) {\n            return (\n                <>\n                    <div className=\"form-area\">\n                        <div\n                            className=\"text-area\"\n                            contentEditable\n                            ref={this.projectTextRef}\n                            placeholder=\"Enter project text\"\n                            onKeyDown={(event) => {\n                                if (event.keyCode === 13)\n                                    this.onProjectSumbit()\n                                else if (event.keyCode === 27) this.setState({ isEditingProject: false })\n                            }}></div>\n                        <div className=\"buttons-container\">\n                            <button className=\"submit-button\" onClick={this.onProjectSumbit}>&#10148;</button>\n                        </div>\n\n                    </div>\n                    <div onClick={() => this.setState({ isEditingProject: false })} className=\"layerClick\"></div>\n                </>\n            )\n        }\n        else {\n            return (\n                <button onClick={this.enterProjectEditMode} className=\"add-task-button\" style={this.props.hovered ? { marginTop: \"80px\" } : {}}>\n                    +\n                </button>\n            )\n        }\n    }\n\n    componentDidMount() {\n        this.fetchTransformDataToState()\n            .then(() => {\n                const focusedDayComponent = this.scrollerRef.current.querySelector(\"#key\");\n                if (focusedDayComponent) {\n                    this.scrollerRef.current.scrollLeft = focusedDayComponent.offsetLeft;\n                }\n            });\n    }\n\n    submitTask(data) {\n        const requestOptions = {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ ...data, ...{ state: 1, position: 0 } }),\n        };\n\n        httpRequestJson(postTimelineTaskEndpoint, requestOptions)\n            .then(() => this.fetchTransformTasksToState())\n            .catch(() => alert(\"Failed to post timeline task\"))\n    }\n\n    deleteTask(id) {\n        httpRequestJson(deleteTimelineTaskEndpoint(id), { method: \"DELETE\" })\n            .then(() => this.fetchTransformTasksToState())\n            .catch(() => alert(\"Failed to delete timeline task\"))\n    }\n\n    setStatePromise = state => new Promise(resolve => this.setState(state, resolve));\n}\n\n\nexport default Timeline;","import React from 'react';\nimport Week from './components/week';\nimport Timeline from './components/Timeline';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: 'FIRST',\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (this.state.active === 'FIRST')\n      this.setState({ active: 'SECOND' });\n    else\n      this.setState({ active: 'FIRST' });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.active === 'FIRST' ? (\n          <Week />\n        ) : this.state.active === 'SECOND' ? (\n          <Timeline />\n        ) : null}\n        <button className=\"view-togle\" onClick={this.handleClick}>Change view</button>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}