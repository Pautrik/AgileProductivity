Week 1:
What do I want to learn or understand better?
  How working in a team with people from different programs will differ
  from working on school projects within a more homogenus team.
  
How can I help someone else, or the entire team, to learn something new?
  With me having worked in different team within larger corporations,
  I could probably help with teaching things regarding longer term software
  management and development, and maybe even some pratical scrum stuff.
  
  When it comes to helping team members trying to learn skills outside of my
  own toolset, it can sometimes be easier to learn something new in pairs so
  I could try to learn that skill together with them.
What is my contribution towards the team’s use of Scrum?
  I have experiences within scrum teams. So although I might not be able to
  give scrum master lever tips, I can still share my own experiences.
What is my contribution towards the team’s deliveries?
  Same as mentioned above, my experience working in teams within companies.


Week2:
What do I want to learn or understand better?
  Can't think of anything new. Eventhough we've started of with the project I 
  guess it's the same as last week.
How can I help someone else, or the entire team, to learn something new?
  Same as last week.
What is my contribution towards the team’s use of Scrum?
  I can try to get more involved with the creation of stories.
What is my contribution towards the team’s deliveries?
  This week I setup the inial backend project in our repository.
  Also participated in the discussion of the development of the applications GUI.

(Week3 and Week4 skipped because of easter).

Week5:

What do I want to learn or understand better?
  Start building react projects. I have quite a good grasp on "vanilla" web
  development. I have and is currently working on larger react app with
  multiple plugins but I have realized that I'm not used to setting up and
  developing without certain crutches provided via external libraries.
  So I want to get a better understanding on how "vanilla" react differs from
  what I am used to working with.
  
How can I help someone else, or the entire team, to learn something new?
  By sitting down and pair coding with them.

What is my contribution towards the team’s use of Scrum?
  When suggesting solutions to larger problems I also try to talk about the
  solutions "scrumminess" both when the solution is more or less "scrummy".
  
What is my contribution towards the team’s deliveries?
  I suggested an overspanning technical architecture and how we could divide
  work between the different areas of work. I also helped the people who doesn't
  have previous experience with git, how to use it.

Week6:
What do I want to learn or understand better?
  Setting up UI testing (react-testing-library) as that is needed to get up the code coverage KPI on the frontend.
How can I help someone else, or the entire team, to learn something new?
  Same as previous weeks.
What is my contribution towards the team’s use of Scrum?
  Same as previous weeks.
  
What is my contribution towards the team’s deliveries?
  Implemented fetching and rendering of content from the backend.
  Improved the frontends error handeling.
  Helped team members with merging and how to create and review pull requests.

Week7:
What do I want to learn or understand better?
  How to easily manage state affecting multiple parts of the application without the use of global state.
  How to integerate CI and test runners into github.
How can I help someone else, or the entire team, to learn something new?
  By giving them advice or just letting them use me as a rubbery ducky.
What is my contribution towards the team’s use of Scrum?
  Setup pull request requirese for merging of feature branches.
  Writing UI-test to increase a KPI.
What is my contribution towards the team’s deliveries?
  I discussed with the backend team and agreed upon how we in the frontend
  team should send payloads and what we could expect to be returned in a response.
  Based on that connected our week view to the backend to finish up the last parts
  of two user stories.
